<!DOCTYPE html>
<!--
WinSetView (Globally Set Explorer Folder Views)
Les Ferch, lesferch@gmail.com, 2021 - 2024
WinSetView.htm (GUI tool to select desired views)
-->
<html>
<head>
<title>WinSetView</title>
<meta charset="UTF-8" http-equiv="X-UA-Compatible" content="IE=8">
<htmlApplication
  width=9999
  height=9999
>
<hta:application
  applicationname=WinSetView
  contextmenu=no
>

<script language="VBScript">
Dim TestVar
</script>
<script language="JScript">
try { if (TestVar) {} }
catch(Err) {
  msg = "VBScript has been disabled or uninstalled.";
  try {
    oWSH = new ActiveXObject("WScript.Shell");
    oWSH.Popup(msg,0,"Error",16);
  }
  catch(Err) {
    alert(msg);
  }
  self.Close();
  window.Close();
}
</script>

<script language="VBScript">
Option Explicit

Const Version = "3.0.1"

SetLocale(1033)
Const ForReading = 1
Const ForWriting = 2
Const Unicode = -1
Const Ansi = 0

' Class for passing parameters
Class ClassParam
  Dim param1
  Dim param2
  Dim param3
End Class

Dim o, oWSH, oFSO, oApp, oFolder, oFile, oFiles, oOption, oElement, oElements
Dim oFolderTypes, oSettings, oSearchOnly, oOption1, oOption2, oThemes
Dim i, j, Q, V, X, Y, Z, Temp, TestFile, Section, CheckCount, Value, Key, ArrKeys, Result, SubKey
Dim AvailHeight, HeadHeight, RequiredWidth, CurrentWidth, Maximized, Fonts, TestFileName
Dim AppData, NTVer, WinVer, MajVer, Folder, INIFile, rbShow, BodyHTML, TaggedHTML, Tag, Item, Win11, Win10
Dim Language,LangDir, LangFile, LangCount, LangData, LangIndex, UBFolderType, YScrollPos
Dim ViewFile, ViewData, FolderTypeFile, Scale, FontsFile, Backup, F1, F2, FTHide, KeepAdvanced
Dim ColFile, ColData, SelectedFont1, SelectedFont2, FontFile, LRArrow, aColor(3)
Dim CmdLine, Line, Order, sOrder, SelectedSize1, SelectedSize2, GUID, Found, VirtualStore
Dim C1, C2, LastColSel, FTindex, Data, Show, TempFile, File, PartsDir, ToolsDir, PropFile
Dim ColWid, ColShow, SortBy, BaseScale, UpArrow, DnArrow, MyPath, MyFolder, a, b, c
Dim Gidx, Midx, Nidx, Pidx, Widx, S1idx, S2idx, S3idx, S4idx, Sort1, Sort2, Sort3, Sort4
Dim ArrSort1, ArrSort2, ArrSort3, ArrSort4, ArrFonts
Dim ArrSort1Order, ArrSort2Order, ArrSort3Order, ArrSort4Order, ArrGroupByOrder
Dim ArrFD, ArrFDV, ArrFDG, LParen, RParen, DetailsIcon, RightClickIcon
Dim ArrLang, ArrView, ArrColData, ArrColDataItem, ArrColumnEntry, ArrColumnList, ArrLine
Dim ArrData(21), ArrFolderTypeGUID(60), ArrFolderType(60), ArrFolderTypeLang(60), ArrInherit(60)
Dim ArrColumnLists, ArrGroupBy, ArrInheritFlag, ArrHTML1, ArrHTML2, ArrViewChoice
Dim ArrSortBy, ArrIncludeFlag, ArrIconSize, ArrThemes
Dim ColShowLabels, FTCopyIdx, ThemeFile, SectionList, sTheme, CurBld, LWinVer, UBR
Dim TempArray, RetVal, DialogArgs, DialogOptions, id, GrpUpArrow, GrpDnArrow
Dim Warning, OptIcon, DialogTop, HighContrast, SysRoot, WinWoW, PSDir, PSExe, PSSubDir
Dim Txt1Data, Txt2Data, WinSys, ExeErr, ArrExe, UseLight, DarkMode
Dim WinSizePos, aWinSizePos, GotError, TaskbarTop, MSHTMLVer, eso, NewerAvailable
Dim ApplyViews, ApplyOptions, altKey

Z = vbCRLF
Q = Chr(34)
Language = "en-US"
KeepAdvanced = False

Set oFSO = CreateObject("Scripting.FileSystemObject")
Set oWSH = CreateObject("Wscript.Shell")
Set oApp = CreateObject("Shell.Application")

WinSizePos = ""
TaskbarTop = False
On Error Resume Next
WinSizePos = oWSH.RegRead("HKCU\Software\WinSetView\WinSizePos")
TaskbarTop = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\StuckRects2\Settings")(12) = 1
TaskbarTop = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\StuckRects3\Settings")(12) = 1
UseLight = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize\AppsUseLightTheme")
On Error Goto 0

DarkMode = True
If UseLight="" Or UseLight=1 Then DarkMode = False

Function TaskbarAdjust(y)
  If TaskbarTop Then
    Dim TaskbarHeight
    TaskbarHeight = screen.height - screen.availHeight + 4
    If y<TaskbarHeight Then y = TaskbarHeight
  End If
  TaskbarAdjust = y
End Function

If WinSizePos<>"" Then
  aWinSizePos = Split(WinSizePos,",")
  If CInt(aWinSizePos(2))=-32000 Then
    WinSizePos=""
  Else
    On Error Resume Next
    window.resizeTo aWinSizePos(0), aWinSizePos(1)
    window.moveTo aWinSizePos(2), aWinSizePos(3)
    GotError = Err.Number<>0
    On Error Goto 0
  End If
End If

If WinSizePos="" Or GotError Then
  RequiredWidth = 700
  If RequiredWidth>screen.availWidth Then RequiredWidth = screen.availWidth
  window.resizeTo RequiredWidth, screen.availHeight
  window.moveTo (screen.availWidth - RequiredWidth) / 2, TaskbarAdjust(4)
End If

Set oSearchOnly = CreateObject("Scripting.Dictionary")
oSearchOnly.add "ItemFolderPathDisplay",""
oSearchOnly.add "ItemFolderPathDisplayNarrow",""
oSearchOnly.add "ItemPathDisplay",""
oSearchOnly.add "ItemFolderNameDisplay",""

BaseScale = GetScale(): Scale = BaseScale

Main

Sub Main

  ' Determine Windows version (also works for Windows Server)
  ' Treat Windows 11 same as Windows 10 because they have same folder types and properties

  NTVer = oWSH.RegRead("HKLM\Software\Microsoft\Windows NT\CurrentVersion\CurrentVersion")
  If NTVer="6.1" Then WinVer = "7"
  If NTVer="6.2" Or NTVer="6.3" Then WinVer = "8"
  On Error Resume Next
  MajVer = oWSH.RegRead("HKLM\Software\Microsoft\Windows NT\CurrentVersion\CurrentMajorVersionNumber")
  CurBld = oWSH.RegRead("HKLM\Software\Microsoft\Windows NT\CurrentVersion\CurrentBuild")
  UBR = oWSH.RegRead("HKLM\Software\Microsoft\Windows NT\CurrentVersion\UBR")
  On Error Goto 0

  If MajVer>=10 Then WinVer = "10"
  LWinVer = WinVer

  Win10 = False
  Win11 = False
  If CurBld>18363 And CurBld<21996 Then Win10 = True
  If CurBld>=21996 Then Win11 = True

  If Win11 Then LWinVer = "11"

  If WinVer<>"7" And WinVer<>"8" And WinVer<>"10" Then
    MsgBox "Windows 7, 8, 10, or higher is required.",vbCritical,"Error"
    self.Close
    window.Close
    Exit Sub
  End If

  SysRoot = oWSH.ExpandEnvironmentStrings("%SystemRoot%")
  WinSys = SysRoot & "\System32\"
  WinWoW = SysRoot & "\SysWOW64\"
  PSSubDir = "WindowsPowerShell\v1.0\"
  PSDir = WinSys & PSSubDir
  If oFSO.FolderExists(WinWoW) Then PSDir = WinWoW & PSSubDir
  PSExe = PSDir & "PowerShell.exe"

  Set oFile = oApp.Namespace(0).ParseName(WinSys & "MSHTML.dll")
  MSHTMLVer = CInt(Split(oFile.ExtendedProperty("System.Software.ProductVersion"),".")(0))

  If MSHTMLVer<11 Then
    MsgBox "MSHTML 11 is required. Update IE to get the latest MSHTML.",vbCritical,"Error"
    self.Close
    window.Close
    Exit Sub
  End If

  HighContrast = oWSH.RegRead("HKCU\Control Panel\Accessibility\HighContrast\Flags")="127"

  ' This code allows the script to run from a UNC or mapped drive
  ' whether it's double-clicked or found with Windows Search

  If Not oFSO.FolderExists("Language") Then oWSH.CurrentDirectory = window.external.ExecutableDir
  MyFolder = oWSH.CurrentDirectory

  If InStr(MyFolder,"[") Or InStr(MyFolder,"]") Then
    a = "Current directory: " & MyFolder & Z & Z
    b = "Due to a PowerShell issue, this script cannot run from a directory containing '[' or ']'"
    c = Z & Z & "Please rename the current directory."
    MsgBox a & b & c,vbCritical,"Error"
    self.Close
    window.Close
    Exit Sub
  End If
    
  Temp = oWSH.ExpandEnvironmentStrings("%Temp%")
  TempFile = Temp & "\WinSetView.tmp"
  PropFile = Temp & "\Properties.tmp"

  LangDir = MyFolder & "\Language\"
  PartsDir = MyFolder & "\AppParts\"
  ToolsDir = MyFolder & "\Tools\"
  AppData = MyFolder & "\AppData"
  Backup = MyFolder & "\AppData\Backup"
  FontsFile = PartsDir & "Fonts.txt"
  ThemeFile = PartsDir & "Themes.ini"

  If WinVer="7" Or WinVer="8" Then
    UpArrow = "↑"
    DnArrow = "↓"
    GrpUpArrow = "(↑)"
    GrpDnArrow = "(↓)"
    LRArrow = "←→"
    OptIcon = "☼"
    Warning = "!"
    DetailsIcon = "⋮⋮"
    RightClickIcon = "⋮"
  Else
    UpArrow = "⮬"
    DnArrow = "⮯"
    GrpUpArrow = "(⮬)"
    GrpDnArrow = "(⮯)"
    LRArrow = "⟷"
    OptIcon = "⚙"
    Warning = "⚠"
    DetailsIcon = "⋮⋮⋮"
    RightClickIcon = "⋮"
  End If

  ' Set AppData to current folder if we have write access
  ' Otherwise set AppData to user profile AppData

  TestFileName = Replace(Replace(Replace(Now(),"/",""),":","")," ","") & ".txt"
  TestFile = ".\" & TestFileName
  On Error Resume Next
  oFSO.OpenTextFile(TestFile,ForWriting,True,Ansi).Write("")
  On Error Goto 0
  If oFSO.FileExists(TestFile) Then
    VirtualStore = oWSH.ExpandEnvironmentStrings("%LOCALAPPDATA%") & "\VirtualStore" & Mid(MyFolder,3) & "\"
    If oFSO.FileExists(VirtualStore & TestFileName) Then AppData = VirtualStore & "AppData"
    oFSO.DeleteFile(TestFile)
  Else
    AppData = oWSH.ExpandEnvironmentStrings("%APPDATA%") & "\WinSetView"
    Backup = AppData & "\Backup"
  End If
  If Not oFSO.FolderExists(AppData) Then oFSO.CreateFolder(AppData)
  If Not oFSO.FolderExists(Backup) Then oFSO.CreateFolder(Backup)

  ' Copy Default INI files to AppData folder with overwrite off

  On Error Resume Next
  Set oFolder = oFSO.GetFolder(MyFolder & "\Defaults\")
  Set oFiles = oFolder.Files
  For Each oFile In oFiles
    oFSO.CopyFile oFile,AppData & "\", False
  Next
  On Error Goto 0

  ' See if there are any backup reg files in the Backup folder

  Set oFolder = oFSO.GetFolder(Backup)
  Set oFiles = oFolder.Files
  rbShow = False
  For Each oFile In oFiles
    If LCase(oFSO.GetExtensionName(oFile.Name)) = "reg" Then rbShow = True
  Next

  ' Get data from INI file

  INIFile = AppData & "\Win" & WinVer & ".ini"
  Set oSettings = CreateObject("Scripting.Dictionary")
  Set oThemes = CreateObject("Scripting.Dictionary")
  If oFSO.FileExists(INIFile) Then Set oSettings = Ini2Dict(INIFile)
  If oFSO.FileExists(ThemeFile) Then Set oThemes = Ini2Dict(ThemeFile)
  ArrThemes = Split(SectionList,"|")

  ' Set language choice from INI or Windows
  SetLang

End Sub

'Calculate current window size and position and save to registry

Sub window_onunload
  Dim w, h
  w = window.external.Width
  h = window.external.Height
  x = window.external.Left
  y = window.external.Top
  If x<>-32000 Then oWSH.RegWrite "HKCU\Software\WinSetView\WinSizePos",w & "," & h & "," & x & "," & y
End Sub

Sub window_onload

  If DarkMode Then document.body.style.backgroundColor = "#202020"

  Vp1.innerHTML = Version
  Vp2.innerHTML = Version
  Vp3.innerHTML = Version
  Vp4.innerHTML = Version

  'Populate language dropdown menu
  
  LangCount = 0
  If oFSO.FolderExists(LangDir) Then
    Set oFolder = oFSO.GetFolder(LangDir)
    For Each oFolder In oFolder.SubFolders
      Folder = oFSO.GetBaseName(oFolder)
      LangCount = LangCount + 1
      Set oOption = document.createElement("Option")
      oOption.text = Folder 
      oOption.value = Folder 
      Lang.add(oOption) 
    Next
  End If

  ' Set language drop down item to selected language

  If LangCount>0 Then
    LangIndex = 0
    For i = 0 To (LangCount - 1)
      If LCase(Language)=LCase(Lang.options(i).value) Then
        LangIndex = i
        Exit For
      End If
    Next
    Lang.selectedIndex = LangIndex
  End If

  ' Populate font menu

  For i = 8 to 24
    Set oOption1 = document.createElement("Option")
    oOption1.text = i
    oOption1.value = i
    Size1.add(oOption1)
    Set oOption2 = document.createElement("Option")
    oOption2.text = i
    oOption2.value = i
    Size2.add(oOption2)
  Next

  ' Populate horizontal scroll control menu

  For i = 0 to 9
    Set oOption = document.createElement("Option")
    If i=0 Then
      oOption.disabled = True
      oOption.text =  "⟷"
      oOption.value = i
    Else
      oOption.text = i
      oOption.value = i
    End If
    xs.add(oOption)
  Next
  
  cbo.value = DetailsIcon
  cbc.value = RightClickIcon

  If WinVer="7" Or WinVer="8" Then
    bc1.value = "⊕"
    bc2.value = "⊕"
    bc3.value = "⊕"
    bc4.value = "⊕"
    ba.value = "↑↓"
  End If

  ' Save current body HTML so that language can be switched without restarting
  TaggedHTML = document.body.innerHTML
  
  ' Set up pages in selected language and font
  ClearBlock PartsDir
  UpdateLang False

  ExeCheck
  
  ClearBlock ToolsDir

End Sub

Sub ClearBlock(Folder)
  On Error Resume Next
  Set oFolder = oFSO.GetFolder(Folder)
  For Each oFile In oFolder.Files
    oFSO.OpenTextFile(oFile.Path & ":Zone.Identifier",ForWriting).Write ""
  Next
  On Error Goto 0
End Sub

Sub ExeCheck
  If Not oFSO.FileExists(PSExe) Then ExeErr = ExeErr & "PowerShell.exe" & Z
  ArrExe = Split("TaskKill.exe,Icacls.exe,Reg.exe,Cmd.exe",",")
  For i = 0 To UBound(ArrExe)
    If Not oFSO.FileExists(WinSys & ArrExe(i)) Then ExeErr = ExeErr & ArrExe(i) & Z
  Next
  If ExeErr<>"" Then
    MsgBox "The following required system files were not found:" & Z & Z & ExeErr,vbCritical,"Error"
    self.Close
    window.Close
    Exit Sub
  End If
End Sub

Sub UpdateCheck
  Dim oReq, Latest, aLatest, aVersion
  Set oReq = CreateObject("Msxml2.XMLHttp")
  x = "https://raw.githubusercontent.com/LesFerch/WinSetView/main/VersionHistory.md"
  On Error Resume Next
  oReq.Open "GET", x, False
  oReq.Send
  x = oReq.responseText
  On Error Goto 0
  If Left(X,1)<>"#" Then Exit Sub
  x = Split(x,vbLF)(0)
  Latest = Mid(x,4)
  aLatest = Split(Latest,".")
  aVersion = Split(Version,".")
  For i = 0 To 2
    j = i
    If CInt(aLatest(i)) <> CInt(aVersion(i)) Then Exit For
  Next
  NewerAvailable = False
  If aLatest(j) > aVersion(j) Then
    NewerAvailable = True
    hb.value = ArrLang(46)
    Vp1.innerHTML = Version & " (" & ArrLang(45) & " " & Latest & ")"
    UpdateRequiredWidth
  End If
End Sub

Sub UpdateRequiredWidth
  RequiredWidth = twid.scrollWidth + Int(BaseScale * 54)
  If RequiredWidth>screen.availWidth Then RequiredWidth = screen.availWidth
End Sub

' The following code is needed for scaling the checkboxes and radio buttons
' If user changes scale, they must logout/login for this registry value to change

Function GetScale()
  GetScale = 1.0
  On Error Resume Next
  GetScale = oWSH.RegRead("HKCU\Control Panel\Desktop\WindowMetrics\AppliedDPI") / 96
  On Error Goto 0
End Function

' Get data from INI file into scripting dictionary

Function Ini2Dict(INIFile)
  SectionList = ""
  Dim oDict
  Set oDict = CreateObject("Scripting.Dictionary")
  If oFSO.FileExists(INIFile) Then 
    Set oFile = oFSO.OpenTextFile(INIFile,ForReading,,Ansi)
    Do Until oFile.AtEndOfStream
      Line = Trim(oFile.ReadLine)
      If Line<>"" And Left(Line,1)<>";" Then
        If Left(Line,1)="[" Then
          Section = Line
          If SectionList<>"" Then SectionList = SectionList & "|"
          SectionList = SectionList & Replace(Replace(Section,"[",""),"]","")
        Else
          ArrLine = Split(Line,"=")
          If UBound(Arrline)=1 Then oDict.add Section & ArrLine(0),ArrLine(1)
        End If
      End If
    Loop
    oFile.Close
    Set Ini2Dict = oDict
  End If
End Function

' Set preferred language

Sub SetLang
  Language = "en-US"
  On Error Resume Next
  Language = oWSH.RegRead("HKCU\Control Panel\International\LocaleName")
  Language = oWSH.RegRead("HKCU\Control Panel\Desktop\PreferredUILanguages")(0)
  On Error Goto 0
  If oSettings.Exists("[Options]Language") Then Language = oSettings.item("[Options]Language")
  If Not oFSO.FolderExists(LangDir & Language) Then Language = "en-US"
  If Not oFSO.FolderExists(LangDir & Language) Then
    If InStr(MyFolder,Temp) Then
      MsgBox "Cannot run directly from zip file." & Z & Z & "Please EXTRACT entire zip file and then run.",vbCritical,"Error"
    Else
      MsgBox "Language folder missing: " & LangDir & Language,vbCritical,"Error"
    End If
    self.Close
    window.Close
    Exit Sub
  End If
End Sub

' Update pages with selected language, font, and size

Sub FTHideUnHide(i,HideAll)
  If ArrIncludeFlag(i)="0" Or HideAll Then
    document.getElementById(i & "FTtitle").className = "ftl"
    document.getElementById(i & "FTsettings").style.display = "none"
    document.getElementById(i & "Include").checked = False
    document.getElementById(i & "Inspect").style.display = "none"
  Else
    document.getElementById(i & "FTtitle").className = "ft"
    document.getElementById(i & "FTsettings").style.display = "block"
    document.getElementById(i & "Include").checked = True
    If IFace.selectedIndex=2 Then document.getElementById(i & "Inspect").style.display = "inline"
  End If
End Sub

Sub UpdateLang(OnChange)

  'Read in language file
  If LangCount>0 Then
    LangIndex = Lang.selectedIndex
    Language = Lang.options(LangIndex).value
    LangFile = LangDir & Language & "\Labels.txt"
    If oFSO.FileExists(LangFile) Then
      LangData = oFSO.OpenTextFile(LangFile,ForReading,,Unicode).ReadAll
    End If
  End If

  ' Make fist array element a blank line so that text editor line numbers match array indices
  ArrLang = Split(Z & LangData,Z)

  FolderTypeFile = LangDir & Language & "\FolderTypes.txt"

  ' Read FolderType file contents into an array
  ' If Win 7 or 8, skip folder types that don't exist

  If oFSO.FileExists(FolderTypeFile) Then
    Set oFile = oFSO.OpenTextFile(FolderTypeFile,ForReading,,Unicode)
    Set oFolderTypes = CreateObject("Scripting.Dictionary")
    i = -1
    Do Until oFile.AtEndOfStream
      Line = Trim(oFile.ReadLine)
      If Line<>"" And Left(Line,1)<>";" And InStr(Line,";") Then
        ArrLine = Split(Line,";")
        GUID = Trim(ArrLine(0))
        Found = True
        If Not(WinVer="10" Or i=-1) Then
          On Error Resume Next
          oWSH.RegRead "HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\FolderTypes\" & GUID & "\CanonicalName"
          If Err.Number<>0 Then Found = False
          On Error Goto 0
          If InStr(ArrLine(1),"StorageProvider") Then Found = False
        End If
        If Found Then
          i = i + 1
          ArrFolderTypeGUID(i) = GUID
          ArrFolderType(i) = Trim(ArrLine(1))
          ArrFolderTypeLang(i) = Trim(ArrLine(2))
          oFolderTypes.add ArrLine(1),i
        End If
      End If
    Loop
    oFile.Close
  Else
    ArrFolderType(0) = "Global"
    ArrFolderTypeLang(0) = "Global"
  End If
  
  ' Set upper bound of folder types
  UBFolderType = i

  ReDim ArrSort1(UBFolderType), ArrSort2(UBFolderType), ArrSort3(UBFolderType), ArrSort4(UBFolderType)
  ReDim ArrSort1Order(UBFolderType), ArrSort2Order(UBFolderType), ArrSort3Order(UBFolderType), ArrSort4Order(UBFolderType)
  ReDim ArrColumnLists(UBFolderType), ArrGroupBy(UBFolderType), ArrViewChoice(UBFolderType), ArrIconSize(UBFolderType)
  ReDim ArrHTML1(UBFolderType), ArrInheritFlag(UBFolderType), ArrIncludeFlag(UBFolderType), ArrGroupByOrder(UBFolderType)
  ReDim ArrFD(UBFolderType), ArrFDV(UBFolderType), ArrFDG(UBFolderType)
  
  ' Set up inheritance based upon first string match up to first period in folder type
  ' For StorageProvider (OneDrive) items, match inheritance on next part of string
  For i = 0 To UBFolderType
    If InStr(ArrFolderType(i),".") Then
      Key = Split(ArrFolderType(i),".")(0)
      ArrInherit(i) = oFolderTypes.item(Key)
    Else
      If InStr(ArrFolderType(i),"StorageProvider") Then
        Key = Mid(ArrFolderType(i),16)
        ArrInherit(i) = oFolderTypes.item(Key)
      Else
        ArrInherit(i) = 0
      End If
    End If
  Next

  ' For easier reference, copy data from scripting dictionary to variables
  Dict2Var(OnChange)

  ' Get Details view column headings
  
  ColFile = LangDir & Language & "\Columns-Win" & LWinVer & ".txt"
  ColData = oFSO.OpenTextFile(ColFile,ForReading,,Unicode).ReadAll

  ' Add Icaros properties if they are activated
  On Error Resume Next
  oWSH.RegRead "HKLM\Software\Microsoft\Windows\CurrentVersion\Shell Extensions\Approved\{0C08E3BB-D10B-4CC9-B1B3-701F5BE9D6EC}"
  Dim Icaros: Icaros = Err.Number=0
  On Error Goto 0
  If Icaros Then
    Dim IcarosFile
    IcarosFile = LangDir & Language & "\Columns-Icaros.txt"
    ColData = ColData + Z + oFSO.OpenTextFile(IcarosFile,ForReading,,Unicode).ReadAll
    ColData = Replace(ColData,Z & Z,Z)
  End If
  
  'Add other non-System properties
  Dim ExePath
  ExePath = PartsDir & "GetMoreProperties.exe"
  On Error Resume Next
  oFSO.DeleteFile(PropFile)
  On Error Goto 0
  If oFSO.FileExists(ExePath) Then
    oWSH.Run """" & ExePath & """",0,True
    If oFSO.FileExists(PropFile) Then
      ColData = ColData + Z + oFSO.OpenTextFile(PropFile,ForReading,,Unicode).ReadAll
      ColData = Replace(ColData,Z & Z,Z)
    End If
  End If

  ArrColData = Split(ColData,Z)
  ReDim ArrHTML2(UBound(ArrColData))
  
  ' Dynamically generate HTML page data
  BuildPages
  
  Pg1.style.visibility = "visible"
  
  window.external.SetWindowTitle("WinSetView (" & ArrLang(1) & ")")
  Lang.selectedIndex = LangIndex
  Size1.selectedIndex = SelectedSize1 - 8
  Size2.selectedIndex = SelectedSize2 - 8
  IFace.selectedIndex = 1
  
  ViewFile = LangDir & Language & "\ViewList.txt"

  If oFSO.FileExists(ViewFile) Then

  ' Get View menu data from file

    ViewData = oFSO.OpenTextFile(ViewFile,ForReading,,Unicode).ReadAll
    ArrView = Split(ViewData,Z)

    ' Populate the two View menus on the Options page

    For j = 0 To 8
      Set oOption = document.createElement("Option")
      oOption.text =  ArrView(j) 
      oOption.value = j
      If j=0 Then oOption.disabled = True
      tpv.add(oOption)
      Set oOption = document.createElement("Option")
      oOption.text =  ArrView(j) 
      oOption.value = j
    Next
      
    ' Populate each folder type setting (View, IconSize, GroupBy, SortBy, and Columns to display)

    For i = 0 To UBFolderType

      For j = 0 To 8
        Set oOption = document.createElement("Option")
        oOption.text =  ArrView(j) 
        oOption.value = j
        If j=0 Then oOption.disabled = True
        document.getElementById(i & "View").add(oOption)
      Next
      
      If ArrViewChoice(i)<>"" Then
        document.getElementById(i & "View").selectedIndex = ArrViewChoice(i)
      Else
        document.getElementById(i & "View").selectedIndex = 1
        ArrViewChoice(i) = 1
      End If

      If ArrIconSize(i)="" Then
        IconSizeUpdate(i)
      Else
        document.getElementById(i & "IconSize").value = ArrIconSize(i)
        document.getElementById(i & "IconSize").disabled = (ArrIconSize(i)="")
      End If

      If i>0 Then
        If ArrIconSize(i)="" Then x = "" Else x = " [" & ArrIconSize(i) & "]"
        document.getElementById(i & "FTView").innerHTML = ArrView(0) & ": " & ArrView(ArrViewChoice(i)) & x
      End If

      If ArrGroupByOrder(i)="" Then ArrGroupByOrder(i)="+"
      If ArrGroupBy(i)="" Then
        document.getElementById(i & "GroupBy").innerHTML = ArrView(9) 'None
      Else
        On Error Resume Next
        document.getElementById(i & "GroupBy").innerHTML = ArrGroupByOrder(i) & document.getElementById("L~" & ArrGroupBy(i)).value
        On Error Goto 0
      End If

      If ArrSort1(i)="" Then ArrSort1(i) = "ItemNameDisplay"
      If ArrSort1Order(i)="" Then ArrSort1Order(i)="+"
      On Error Resume Next
      Sort1 = ArrSort1Order(i) & document.getElementById("L~" & ArrSort1(i)).value
      Sort2 = "": Sort3 = "": Sort4 = ""
      If ArrSort2(i)<>"" Then Sort2 = ArrSort2Order(i) & document.getElementById("L~" & ArrSort2(i)).value
      If ArrSort3(i)<>"" Then Sort3 = ArrSort3Order(i) & document.getElementById("L~" & ArrSort3(i)).value
      If ArrSort4(i)<>"" Then Sort4 = ArrSort4Order(i) & document.getElementById("L~" & ArrSort4(i)).value
      On Error Goto 0
      SortBy = Sort1
      If Sort2<>"" Then SortBy = SortBy & ", " & Sort2
      If Sort3<>"" Then SortBy = SortBy & ", " & Sort3
      If Sort4<>"" Then SortBy = SortBy & ", " & Sort4

      document.getElementById(i & "SortBy").innerHTML = SortBy

      If i>0 Then
        document.getElementById(i & "Inherit").checked = ArrInheritFlag(i)
        document.getElementById(i & "Include").checked = ArrIncludeFlag(i)
        If ArrInheritFlag(i)="1" Then
          document.getElementById(i & "FTcontrols").style.display = "none"
        Else
          document.getElementById(i & "FTView").style.display = "none"
        End If
      End If

      ArrColumnList = Split(ArrColumnLists(i),";")

      ColShow = ""

      For j = 0 To UBound(ArrColumnList)
        ArrColumnEntry = Split(ArrColumnList(j),",")
        If ArrColumnEntry(0)="0" Then
          If ColShow<>"" Then ColShow = ColShow & " | "
          ColShowColor(ArrColumnEntry(2))
          On Error Resume Next
          ColShow = ColShow & "<span class=" & x & ">" & document.getElementById("L~" & ArrColumnEntry(2)).value & "</span>"
          On Error Goto 0
        End If
      Next

      document.getElementById(i & "ColShow").innerHTML = ColShow
      UpdateFDView(i)
 
    Next

  End If

  ' Get list of fonts from file

  If Not oFSO.FileExists(FontsFile) Then
      ArrFonts = Array(SelectedFont1,SelectedFont2)
  Else
    Fonts = oFSO.OpenTextFile(FontsFile,ForReading,,Ansi).ReadAll
    ArrFonts = Split(Fonts,Z)
  End If

  ' Populate font menu

  For i = 0 To UBound(ArrFonts)
    Set oOption1 = document.createElement("Option")
    Set oOption2 = document.createElement("Option")
    If ArrFonts(i)<>"" Then
      oOption1.text = ArrFonts(i) 
      oOption2.text = ArrFonts(i) 
      oOption1.value = ArrFonts(i)
      oOption2.value = ArrFonts(i)
      Font1.add(oOption1)
      Font2.add(oOption2)
      If SelectedFont1=ArrFonts(i) Then Font1.selectedIndex = i
      If SelectedFont2=ArrFonts(i) Then Font2.selectedIndex = i
    End If
  Next

  ' Create Theme Select element with translated labels
  For i = -1 To UBound(ArrThemes)
    Set oOption = document.createElement("Option")
    If i=-1 Then
      oOption.disabled = True
      oOption.text = ArrLang(37) 
      oOption.value = ArrLang(37)
    Else
      x = Replace(Replace(ArrThemes(i),"Light",ArrLang(38)),"Dark",ArrLang(39))
      oOption.text = x 
      oOption.value = ArrThemes(i) 
    End If
    Theme.add(oOption)
  Next

  ' Copy remaining settings from scripting dictionary to the HTML pages
  Dict2Dom
  
  ' Update page elements to selected font and size
  UpdateFont1

  If KeepAdvanced Then IFace.selectedIndex = 2

  ' Hide or unhide controls based on Reset checkbox
  OptionReset
  
  ' Hide Restore button if no backup files
  If Not rbshow Then rb.style.display = "None"
  
  SetInterface
  
  SetTheme

  xschange
  
End Sub

Sub ColShowColor(e)
  x = "X1"
  If e="Search.Rank" Then x = "X2"
  If oSearchOnly.Exists(e) Then
    If so.checked Then x = "X4" Else x = "X3"
  End If
  If HighContrast Then x = x & "HC"
End Sub

' Get preferred font for the selected language and Windows version

Sub GetFontFromFile
  FontFile = ""
  F1 = LangDir & Language & "\Font-Win" & WinVer & ".txt"
  F2 = LangDir & Language & "\Font.txt"
  If oFSO.FileExists(F1) Then
    FontFile = F1
  Else
    If oFSO.FileExists(F2) Then FontFile = F2
  End If
  If FontFile<>"" Then
    Set oFile = oFSO.OpenTextFile(FontFile,ForReading,,Ansi)
    SelectedFont1 = oFile.ReadLine
    oFile.Close
  End If
End Sub

' Populate variables from settings dictionary object

Sub Dict2Var(OnChange)

  If OnChange Then
    GetFontFromFile
  Else
    SelectedFont1 = "Segoe UI": SelectedSize1 = "11": SelectedFont2 = "Consolas": SelectedSize2 = "10"
    GetFontFromFile
    If oSettings.Exists("[Options]Font1") Then SelectedFont1 = oSettings.item("[Options]Font1")
    If oSettings.Exists("[Options]Font2") Then SelectedFont2 = oSettings.item("[Options]Font2")
    If oSettings.Exists("[Options]Size1") Then SelectedSize1 = oSettings.item("[Options]Size1")
    If oSettings.Exists("[Options]Size2") Then SelectedSize2 = oSettings.item("[Options]Size2")
  End If

  For i = 0 To UBFolderType
    ArrViewChoice(i) = oSettings.item("[" & ArrFolderType(i) & "]View")
    ArrIconSize(i) = oSettings.item("[" & ArrFolderType(i) & "]IconSize")
    ArrColumnLists(i) = oSettings.item("[" & ArrFolderType(i) & "]ColumnList")
    ArrGroupBy(i) = oSettings.item("[" & ArrFolderType(i) & "]GroupBy")
    ArrGroupByOrder(i) = oSettings.item("[" & ArrFolderType(i) & "]GroupByOrder")
    ArrFD(i) = oSettings.item("[" & ArrFolderType(i) & "]FileDialogOption")
    ArrFDV(i) = oSettings.item("[" & ArrFolderType(i) & "]FileDialogView")
    ArrFDG(i) = oSettings.item("[" & ArrFolderType(i) & "]FileDialogNG")
    ArrInheritFlag(i) = oSettings.item("[" & ArrFolderType(i) & "]Inherit")
    ArrIncludeFlag(i) = oSettings.item("[" & ArrFolderType(i) & "]Include")
    If ArrColumnLists(i)="" Then ArrColumnLists(i) = "0,34,ItemNameDisplay"
    If ArrInheritFlag(i)="" Then ArrInheritFlag(i) = "1"
    If ArrIncludeFlag(i)="" Then
      If ArrFolderType(i)="FileItemAPIs" Then
        ArrIncludeFlag(i) = "0"
      Else
        ArrIncludeFlag(i) = "1"
      End If
    End If
    ArrSort1Order(i) = "+": ArrSort1(i) = "ItemNameDisplay"
    ArrSort2Order(i) = "+": ArrSort2(i) = ""
    ArrSort3Order(i) = "+": ArrSort3(i) = ""
    ArrSort4Order(i) = "+": ArrSort4(i) = ""
    SortBy = oSettings.item("[" & ArrFolderType(i) & "]SortBy")
    ArrSortBy = Split(SortBy,";")
    ReDim Preserve ArrSortBy(3)
    ArrSort1Order(i) = Left(ArrSortBy(0),1): ArrSort1(i) = Mid(ArrSortBy(0),2)
    ArrSort2Order(i) = Left(ArrSortBy(1),1): ArrSort2(i) = Mid(ArrSortBy(1),2)
    ArrSort3Order(i) = Left(ArrSortBy(2),1): ArrSort3(i) = Mid(ArrSortBy(2),2)
    ArrSort4Order(i) = Left(ArrSortBy(3),1): ArrSort4(i) = Mid(ArrSortBy(3),2)
    If ArrSort1Order(i)<>"+" And ArrSort1Order(i)<>"-" Then ArrSort1(i) = ArrSort1Order(i) & ArrSort1(i): ArrSort1Order(i) = "+"
    If ArrSort2Order(i)<>"+" And ArrSort2Order(i)<>"-" Then ArrSort2(i) = ArrSort2Order(i) & ArrSort2(i): ArrSort2Order(i) = "+"
    If ArrSort3Order(i)<>"+" And ArrSort3Order(i)<>"-" Then ArrSort3(i) = ArrSort3Order(i) & ArrSort3(i): ArrSort3Order(i) = "+"
    If ArrSort4Order(i)<>"+" And ArrSort4Order(i)<>"-" Then ArrSort4(i) = ArrSort4Order(i) & ArrSort4(i): ArrSort4Order(i) = "+"
  Next
End Sub

' Populate HTML pages directly from scripting dictionary for some settings

Sub Dict2Dom
  wd.checked = SetInitial("[Options]Reset",0)
  bu.checked = SetInitial("[Options]Backup",1)
  se.checked = SetInitial("[Options]ShowExt",1)
  cv.checked = SetInitial("[Options]CompView",1)
  hf.checked = SetInitial("[Options]ShowHidden",0)
  gn.checked = SetInitial("[Options]Generic",0)
  so.checked = SetInitial("[Options]SearchOnly",1)
  vf.checked = SetInitial("[Options]SetVirtualFolders",0)
  ns.checked = SetInitial("[Options]NoSuggestions",1)
  nn.checked = SetInitial("[Options]NoNumericalSort",0)
  ts.checked = SetInitial("[Options]Win10Search",0)
  ee.checked = SetInitial("[Options]Win11Explorer",0)
  ls.checked = SetInitial("[Options]LegacySpacing",0)
  fr.checked = SetInitial("[Options]NoFullRowSelect",0)
  ld.checked = SetInitial("[Options]LegacyDialogFix",0)
  es.checked = SetInitial("[Options]ExplorerStart",0)
  esi.value = SetInitial("[Options]ExplorerStartPath","C:\")
  ex.checked = SetInitial("[Options]Win10Explorer",0)
  nf.checked = SetInitial("[Options]NoFolderThumbs",0)
  ua.checked = SetInitial("[Options]UnhideAppData",0)
  pd.checked = SetInitial("[Options]UnhidePublicDesktop",0)
  sc.checked = SetInitial("[Options]ClassicSearch",0)
  hg.checked = SetInitial("[Options]HomeGrouping",0)
  lg.checked = SetInitial("[Options]LibraryGrouping",0)
  cm.checked = SetInitial("[Options]ClassicContextMenu",1)
  mc.checked = SetInitial("[Options]CopyMoveInMenu",0)
  si.checked = SetInitial("[Options]NoSearchInternet",0)
  sh.checked = SetInitial("[Options]NoSearchHighlights",0)
  tp.checked = SetInitial("[Options]ThisPCoption",1)
  tpg.checked = SetInitial("[Options]ThisPCNG",0)
  tpv.selectedIndex = SetInitial("[Options]ThisPCView",3)
  xs.selectedIndex = SetInitial("[Options]Scroll",1)
  IFace.selectedIndex = SetInitial("[Options]Interface",1)
  Theme.selectedIndex = SetInitial("[Options]ThemeIndex",1)
  eso = SetInitial("[Options]ExplorerStartOption",2)
  If eso=1 Then rbes1.checked = True
  If eso=2 Then rbes2.checked = True
  If eso=3 Then rbes3.checked = True
  If eso=4 Then rbes4.checked = True
  ApplyViews = SetInitial("[Options]ApplyViews",1)
  ApplyOptions = SetInitial("[Options]ApplyOptions",1)
End Sub

Function SetInitial(DictEntry,Default)
  SetInitial = oSettings.item(DictEntry)
  If SetInitial="" Then SetInitial = Default
  If IsNumeric(Default) Then SetInitial = Int(SetInitial)
End Function

Function FileDialog(Action,Path,Filter,EnableMulti,ReturnMulti)
  Dim ret: FileDialog = "": Filter = Filter & "|"
  Select Case LCase(Action)
    Case "open"
      ret = window.external.OpenFileDialog(Path,Filter,EnableMulti)
    Case "save"
      ret = window.external.SaveFileDialog(Path,Filter,EnableMulti)
  End Select
  If InStr(ret,":0")>0 Then Exit Function
  ret = Replace(ret,"}","")
  ret = Replace(ret,"]","")
  ret = Replace(ret,"[","")
  ret = Split(ret,""":""")(1)
  ret = Replace(ret,"\\","\")
  ret = Replace(ret,""",""","|")
  ret = Replace(ret,"""","")
  If ReturnMulti Then FileDialog = ret Else FileDialog = Split(ret,"|")(0)
End Function

' Load Settings button

Sub LoadSettings
  File = FileDialog("Open",AppData,"*.ini|*.ini",False,False)
  If File<>"" Then
    KeepAdvanced = True
    Set oSettings = Ini2Dict(File)
    SetLang
    UpdateLang False
  End If
End Sub

' Save Settings button

Sub SaveSettings
  File = FileDialog("Save",AppData & "\","*.ini|*.ini",False,False)
  If File<>"" Then Var2Ini(File)
End Sub

' Restore button

Sub Restore
  File = FileDialog("Open",Backup,"*.reg|*.reg",True,False)
  If File<>"" Then RunScript File
End Sub

' Write vars to INI file

Sub Var2Ini(INIFile)
  Set oFile = oFSO.OpenTextFile(INIFile,ForWriting,True,Ansi)
  oFile.Write "[Options]" & Z
  oFile.Write "ThemeIndex=" & Theme.selectedIndex & Z
  oFile.Write "Language=" & Language & Z
  oFile.Write "Font1=" & Font1.Options(Font1.selectedIndex).value & Z
  oFile.Write "Font2=" & Font2.Options(Font2.selectedIndex).value & Z
  oFile.Write "Size1=" & Size1.Options(Size1.selectedIndex).value & Z
  oFile.Write "Size2=" & Size2.Options(Size2.selectedIndex).value & Z
  oFile.Write "Scroll=" & xs.selectedIndex & Z
  oFile.Write "Interface=" & IFace.selectedIndex & Z
  oFile.Write "Reset=" & Abs(Int(wd.checked)) & Z
  oFile.Write "Backup=" & Abs(Int(bu.checked)) & Z
  oFile.Write "ShowExt=" & Abs(Int(se.checked)) & Z
  oFile.Write "CompView=" & Abs(Int(cv.checked)) & Z
  oFile.Write "ShowHidden=" & Abs(Int(hf.checked)) & Z
  oFile.Write "Generic=" & Abs(Int(gn.checked)) & Z
  oFile.Write "SearchOnly=" & Abs(Int(so.checked)) & Z
  oFile.Write "SetVirtualFolders=" & Abs(Int(vf.checked)) & Z
  oFile.Write "NoSuggestions=" & Abs(Int(ns.checked)) & Z
  oFile.Write "NoNumericalSort=" & Abs(Int(nn.checked)) & Z
  oFile.Write "Win10Search=" & Abs(Int(ts.checked)) & Z
  oFile.Write "Win11Explorer=" & Abs(Int(ee.checked)) & Z
  oFile.Write "LegacySpacing=" & Abs(Int(ls.checked)) & Z
  oFile.Write "NoFullRowSelect=" & Abs(Int(fr.checked)) & Z
  oFile.Write "LegacyDialogFix=" & Abs(Int(ld.checked)) & Z
  oFile.Write "ExplorerStart=" & Abs(Int(es.checked)) & Z
  If rbes1.checked Then eso = 1
  If rbes2.checked Then eso = 2
  If rbes3.checked Then eso = 3
  If rbes4.checked Then eso = 4
  oFile.Write "ExplorerStartOption=" & eso & Z
  oFile.Write "ExplorerStartPath=" & esi.value & Z
  oFile.Write "Win10Explorer=" & Abs(Int(ex.checked)) & Z
  oFile.Write "NoFolderThumbs=" & Abs(Int(nf.checked)) & Z
  oFile.Write "UnhideAppData=" & Abs(Int(ua.checked)) & Z
  oFile.Write "UnhidePublicDesktop=" & Abs(Int(pd.checked)) & Z
  oFile.Write "ClassicSearch=" & Abs(Int(sc.checked)) & Z
  oFile.Write "HomeGrouping=" & Abs(Int(hg.checked)) & Z
  oFile.Write "LibraryGrouping=" & Abs(Int(lg.checked)) & Z
  oFile.Write "ClassicContextMenu=" & Abs(Int(cm.checked)) & Z
  oFile.Write "CopyMoveInMenu=" & Abs(Int(mc.checked)) & Z
  oFile.Write "NoSearchInternet=" & Abs(Int(si.checked)) & Z
  oFile.Write "NoSearchHighlights=" & Abs(Int(sh.checked)) & Z
  oFile.Write "ThisPCoption=" & Abs(Int(tp.checked)) & Z
  oFile.Write "ThisPCView=" & tpv.selectedIndex & Z
  oFile.Write "ThisPCNG=" & Abs(Int(tpg.checked)) & Z
  oFile.Write "ApplyViews=" & ApplyViews & Z
  oFile.Write "ApplyOptions=" & ApplyOptions & Z
  For i = 0 To UBFolderType
    oFile.Write "[" & ArrFolderType(i) & "]" & Z
    If i>0 Then 
      oFile.Write "GUID=" & ArrFolderTypeGUID(i) & Z
      oFile.Write "Include=" & ArrIncludeFlag(i) & Z
      oFile.Write "Inherit=" & ArrInheritFlag(i) & Z
    End If
    oFile.Write "View=" & document.getElementById(i & "View").selectedIndex & Z
    oFile.Write "IconSize=" & document.getElementById(i & "IconSize").value & Z
    oFile.Write "ColumnList=" & ArrColumnLists(i) & Z
    oFile.Write "GroupBy=" & ArrGroupBy(i) & Z
    oFile.Write "GroupByOrder=" & ArrGroupByOrder(i) & Z
    oFile.Write "FileDialogOption=" & ArrFD(i) & Z
    oFile.Write "FileDialogView=" & ArrFDV(i) & Z
    oFile.Write "FileDialogNG=" & ArrFDG(i) & Z
    SortBy = ArrSort1Order(i) & ArrSort1(i)
    If ArrSort2(i)<>"" Then SortBy = SortBy & ";" & ArrSort2Order(i) & ArrSort2(i)
    If ArrSort3(i)<>"" Then SortBy = SortBy & ";" & ArrSort3Order(i) & ArrSort3(i)
    If ArrSort4(i)<>"" Then SortBy = SortBy & ";" & ArrSort4Order(i) & ArrSort4(i)
    oFile.Write "SortBy=" & SortBy & Z
  Next
  oFile.Close
End Sub

' Script for displaying synchronized views of registry before/after views

Sub Inspection(i)
  Key = "\Software\Microsoft\Windows\CurrentVersion\Explorer\FolderTypes\"
  oWSH.Run "Reg Export " & "HKLM" & Key & ArrFolderTypeGUID(i) & " " & Q & TempFile & Q & " /y",0,True
  Txt1Data = oFSO.OpenTextFile(TempFile,ForReading,,Unicode).ReadAll
  Txt1.value = Txt1Data

  oFSO.DeleteFile TempFile
  oWSH.Run "Reg Export " & "HKCU" & Key & ArrFolderTypeGUID(i) & " " & Q & TempFile & Q & " /y",0,True
  If oFSO.FileExists(TempFile) Then
    Txt2Data = oFSO.OpenTextFile(TempFile,ForReading,,Unicode).ReadAll
    Txt2.value = Txt2Data
  End If

  YScrollPos = document.documentElement.scrollTop
  Pg1.style.display = "none"
  Pg2.style.display = "none"
  UpdateFont2
  UpdateSize2
  document.documentElement.style.overflow = "hidden"
  HeadHeight = P3hd.scrollHeight + 50
  AvailHeight = document.documentElement.clientHeight - HeadHeight
  y = Int(AvailHeight / 2)
  Txt1.style.height = y
  Txt2.style.height = y
  window.scrollTo 0, 0
End Sub

Function Modal(Title,Args,DialogTop)

  Dim w, t, wx

  t = Abs(Int(Instr(LCase(sTheme),"dark")>0))
  If HighContrast Then t = 2

  w = Int(document.documentElement.clientWidth)
  wx = Int(350*Scale)
  If wx<w Then w = wx
  
  x = window.screenLeft+Int(2*Scale)
  y = DialogTop

  DialogArgs = Title & ";" & SelectedFont1 & ";" & SelectedSize1 & ";" & Scale & ";" & t & ";" & w & ";" & x & ";" & y & ";" & Args
  
	Dim param
	Set param = New ClassParam
	param.param1 = DialogArgs
	param.param2 = aColor
	param.param3 = ArrLang(75) 'OK button text

  window.external.CustomDialog "Modal.htm", param, w, 100, 0

	Modal = param.param1
	
End Function

Sub FTOptions(i)
  RetVal = Modal(OptIcon, ArrLang(12) & ";" & ArrLang(25) & ";" & Join(ArrView,"|") & ";" & ArrFD(i) & ";" & ArrFDG(i) & ";" & ArrFDV(i), window.event.clientY)
  If RetVal<>"" Then
    TempArray = Split(RetVal,"|")
    ArrFD(i) = Int(TempArray(0))
    ArrFDV(i) = Int(TempArray(1))
    ArrFDG(i) = Int(TempArray(2))
  End If
  UpdateFDView(i)
  InheritUpdate(i)
End Sub

Sub UpdateFDView(i)
  If ArrFD(i)="1" Then
    LParen = "": RParen = ""
    If ArrFDG(i)="0" Then LParen = "(": RParen = ")"
    document.getElementById(i & "FTDialogView").style.display = "block"
    document.getElementById(i & "DialogView").innerHTML = LParen & ArrView(ArrFDV(i)) & RParen
  Else
    document.getElementById(i & "FTDialogView").style.display = "none"
  End If
End Sub

Sub FTCopy(i)
  FTCopyIdx = i
End Sub

Sub FTPaste(i)
  If FTCopyIdx="" Then Exit Sub
  ArrViewChoice(i) = ArrViewChoice(FTCopyIdx)
  ArrIconSize(i) = ArrIconSize(FTCopyIdx)
  ArrColumnLists(i) = ArrColumnLists(FTCopyIdx)
  ArrGroupBy(i) = ArrGroupBy(FTCopyIdx)
  ArrGroupByOrder(i) = ArrGroupByOrder(FTCopyIdx)
  ArrFD(i) = ArrFD(FTCopyIdx)
  ArrFDV(i) = ArrFDV(FTCopyIdx)
  ArrFDG(i) = ArrFDG(FTCopyIdx)
  ArrSort1(i) = ArrSort1(FTCopyIdx)
  ArrSort1Order(i) = ArrSort1Order(FTCopyIdx)
  ArrSort2(i) = ArrSort2(FTCopyIdx)
  ArrSort2Order(i) = ArrSort2Order(FTCopyIdx)
  ArrSort3(i) = ArrSort3(FTCopyIdx)
  ArrSort3Order(i) = ArrSort3Order(FTCopyIdx)
  ArrSort4(i) = ArrSort4(FTCopyIdx)
  ArrSort4Order(i) = ArrSort4Order(FTCopyIdx)
  document.getElementById(i & "View").selectedIndex = ArrViewChoice(i)
  document.getElementById(i & "IconSize").value = ArrIconSize(i)
  document.getElementById(i & "GroupBy").innerHTML = document.getElementById(FTCopyIdx & "GroupBy").innerHTML
  document.getElementById(i & "SortBy").innerHTML = document.getElementById(FTCopyIdx & "SortBy").innerHTML
  document.getElementById(i & "ColShow").innerHTML = document.getElementById(FTCopyIdx & "ColShow").innerHTML
  UpdateFDView(i)
  InheritUpdate(i)
End Sub

' Display Options page

Sub FVOptions
  YScrollPos = document.documentElement.scrollTop
  Pg1.style.display = "none"
  Pg4.style.display = "inline"
  OptionLS
  OptionLSDiv
  OptionThisPC
  Sec4.style.marginTop = fix4.scrollHeight - (Scale*20)
End Sub

Sub ExpOptions
  YScrollPos = document.documentElement.scrollTop
  Pg1.style.display = "none"
  Pg5.style.display = "inline"
  OptionTS
  OptionES
  Sec5.style.marginTop = fix5.scrollHeight - (Scale*20)
  If CurBld=22621 And UBR>="3007" And UBR<"3085" Then ees.style.display = "inline"
End Sub

Sub DetectExpOptions
  'WinSetView is compiled 32 bit so that it runs on all systems without having to make separate 32 and 64 bit exes.
  'We use CSReg.exe (.Net app set to prefer 64 bit) to read CLSID entries without being redirected to the 32 bit key.
  'Reg.exe with the /reg:64 argument would also work, but not when the RegistryToolsDisabled policy is enabled.
  Dim csregQuery, csregReg, AdvKey
  csregQuery = """" & PartsDir & "CSReg.exe"" query "
  csregReg = "HKCU\Software\CSReg\RetVal"
  AdvKey = "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\"
  On Error Resume Next
  If Win11 Then
    cv.checked = oWSH.RegRead(AdvKey & "UseCompactMode") = 1
    oWSH.Run csregQuery & "HKCU\Software\Classes\CLSID\{86CA1AA0-34AA-4E8B-A509-50C905BAE2A2}\InprocServer32 /ve",0,True
    Err.Clear: oWSH.RegRead csregReg
    cm.checked = Err.Number = 0
    oWSH.Run csregQuery & "HKCU\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0} /ve",0,True
    Err.Clear: oWSH.RegRead csregReg
    ex.checked = Err.Number = 0
  End If
  se.checked = oWSH.RegRead(AdvKey & "HideFileExt") = 0
  hf.checked = oWSH.RegRead(AdvKey & "Hidden") = 1
  mc.checked = False
  mc.checked = oWSH.RegRead("HKCU\Software\Classes\AllFileSystemObjects\shellex\ContextMenuHandlers\{C2FBB630-2971-11D1-A18C-00C04FD75D13}\") = ""
  mc.checked = oWSH.RegRead("HKCU\Software\Classes\AllFileSystemObjects\shellex\ContextMenuHandlers\{C2FBB631-2971-11D1-A18C-00C04FD75D13}\") = ""
  si.checked = False
  si.checked = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\Search\BingSearchEnabled") = 0
  sh.checked = False
  sh.checked = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\SearchSettings\IsDynamicSearchBoxEnabled") = 0
  sh.checked = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\Feeds\DSB\ShowDynamicContent") = 0
  nf.checked = False
  nf.checked = LCase(oWSH.RegRead("HKCU\Software\Classes\Local Settings\Software\Microsoft\Windows\Shell\Bags\AllFolders\Shell\Logo")) = "none"
  Set oFolder = oFSO.GetFolder(oWSH.ExpandEnvironmentStrings("%UserProfile%") & "\AppData")
  ua.checked = (oFolder.Attributes And 2) = 0
  Set oFolder = oFSO.GetFolder("C:\Users\Public\Desktop")
  pd.checked = (oFolder.Attributes And 2) = 0
  ns.checked = False
  ns.checked = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\UserProfileEngagement\ScoobeSystemSettingEnabled") = 0
  ns.checked = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\ScoobeSystemSettingEnabled") = 0
  ns.checked = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\ScoobeSystemSettingEnabled") = 0
  nn.checked = False
  nn.checked = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoStrCmpLogical") = 1
  nn.checked = oWSH.RegRead("HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoStrCmpLogical") = 1
  ts.checked = False
  ts.checked = oWSH.RegRead("HKLM\System\CurrentControlSet\Control\FeatureManagement\Overrides\8\1144177291\EnabledState") = 2
  If ts.checked Then
    oWSH.Run csregQuery & "HKCU\Software\Classes\CLSID\{1d64637d-31e9-4b06-9124-e83fb178ac6e}\TreatAs /ve",0,True
    Err.Clear: oWSH.RegRead csregReg
    sc.checked = Err.Number = 0
  End If
  OptionTS
  ld.checked = False
  ld.checked = oWSH.RegRead("HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\ComDlg32\PlacesBar\") = ""
  If WinVer = "7" Or WinVer = "8" Then
    es.checked = False
  Else
    es.checked = True
    Dim ePath: ePath = ""
    oWSH.Run csregQuery & "HKCU\Software\Classes\CLSID\{52205fd8-5dfb-447d-801a-d0b52f2e83e1}\shell\OpenNewWindow\command /ve",0,True
    ePath = oWSH.RegRead(csregReg)
    If ePath <> "" Then
      rbes4.checked = True
      esi.value = Replace(Mid(ePath, InStr(ePath," ")+1),Chr(34),"")
    Else
      If oWSH.RegRead(AdvKey & "LaunchTo") = 4 Then
        rbes2.checked = True
      Else
        rbes1.checked = oWSH.RegRead(AdvKey & "LaunchTo") = 1
        rbes2.checked = oWSH.RegRead(AdvKey & "LaunchTo") = 2
        rbes3.checked = oWSH.RegRead(AdvKey & "LaunchTo") = 3
      End If
    End If
  End If
  On Error Goto 0
  OptionES
End Sub

Sub Arrange
  GenColShow
  TempArray = Split(ColShowLabels,"|")
  DialogTop = window.screenTop+Int(fix2.scrollHeight-(Scale*60))
  RetVal = Modal(ArrLang(36), ColShowLabels, DialogTop)
  If RetVal="" Then Exit Sub
  TempArray = Split(RetVal,"|")
  For j = 0 To UBound(TempArray)
    id = Split(ArrData(TempArray(j)),";")(4)
    document.getElementById("N~" & id).value = j
  Next
  GenColShow
  If document.getElementById("N~ItemNameDisplay").value<>0 Then
    RetVal = Modal(Warning, ArrLang(43), DialogTop)
  End If
End Sub

' Save settings and run WinSetView.ps1

Sub Submit
  Dim Reset: Reset = "0"
  If wd.checked Then Reset = "1"
  DialogArgs = ArrLang(73) & ";" & ArrLang(74) & ";" & ApplyViews & ";" & ApplyOptions & ";" & ArrLang(2) & ";" & Reset
  DialogTop = window.screenTop+Int(fix1.scrollHeight-(Scale*80))
  RetVal = Modal("🚀", DialogArgs, DialogTop)
  If RetVal="" Then Exit Sub
  Dim aRetVal: aRetVal = Split(RetVal,"|")
  If aRetVal(0)="0" And aRetVal(1)="0" Then Exit Sub
  ApplyViews = aRetVal(0)
  ApplyOptions = aRetVal(1)
  altKey = aRetVal(2) = "1"
  Var2Ini(INIFile)
  RunScript INIFile
End Sub

' Run WinSetView.ps1 with supplied parameter (INI or REG filename)

Sub RunScript(Param)
  x = ""
  If Right(Param,3)="ini" Then
    If altKey Then x = "-NoExit"
  End If
  CmdLine = PSExe & " " & x & " -NoLogo -NoProfile -ExecutionPolicy Bypass -File .\WinSetView.ps1 " & Chr(34) & Param & Chr(34)

  oWSH.Run CmdLine,1,False
  self.Close
  window.Close
End Sub

' Set values for column selection page

Sub SelectColumns(i)
  FTindex = i

  'These two lines added June 2023 to disable Sort 4
  ArrSort4(FTindex)=""
  cbs4.style.display = "none"

  'Reset everything
  For i = 0 To UBound(ArrColData)
    If ArrColData(i)<>"" Then
      ArrColDataItem = Split(ArrColData(i),";")
      C1 = ArrColDataItem(1): C2 = ArrColDataItem(0)
      Pidx = "P~" & C1: Widx = "W~" & C1: Nidx = "N~" & C1: Gidx = "G~" & C1: S1idx = "S1~" & C1: S2idx = "S2~" & C1: S3idx = "S3~" & C1: S4idx = "S4~" & C1: Midx = "M~" & C1
      document.getElementById(Nidx).value = ""
      document.getElementById(Widx).value = ""
      If C1="ItemNameDisplay" Then
        document.getElementById(Pidx).checked = True
        document.getElementById(Midx).checked = True
        document.getElementById(Pidx).disabled = True
        document.getElementById(Midx).disabled = True
      Else
        document.getElementById(Pidx).checked = False
        document.getElementById(Midx).checked = False
      End If
      If ArrGroupBy(FTindex)="" Then
        GroupBy(i).style.visibility = "hidden"
        document.getElementById(Gidx).checked = False
      Else
        GroupBy(i).style.visibility = "visible"
        If ArrGroupBy(FTindex)=C1 Then document.getElementById(Gidx).checked = True
      End If
      If ArrSort1(FTindex)=C1 Then document.getElementById(S1idx).checked = True
      If ArrSort2(FTindex)="" Then 
        RBS2(i).style.visibility = "hidden"
        document.getElementById(S2idx).checked = False
      Else
        RBS2(i).style.visibility = "visible"
        If ArrSort2(FTindex)=C1 Then document.getElementById(S2idx).checked = True
      End If
      If ArrSort3(FTindex)="" Then 
        RBS3(i).style.visibility = "hidden"
        document.getElementById(S3idx).checked = False
      Else
        RBS3(i).style.visibility = "visible"
        If ArrSort3(FTindex)=C1 Then document.getElementById(S3idx).checked = True
      End If
      If ArrSort4(FTindex)="" Then 
        RBS4(i).style.visibility = "hidden"
        document.getElementById(S4idx).checked = False
      Else
        RBS4(i).style.visibility = "visible"
        If ArrSort4(FTindex)=C1 Then document.getElementById(S4idx).checked = True
      End If
    End If
  Next

  If ArrGroupBy(FTindex)="" Then
    cbg.value = "X"
  Else
    If ArrGroupByOrder(FTindex)="+" Then cbg.value = GrpUpArrow Else cbg.value = GrpDnArrow
  End If

  If ArrSort1Order(FTindex)="+" Then cbs1.value = UpArrow Else cbs1.value = DnArrow
  If ArrSort2Order(FTindex)="+" Then cbs2.value = UpArrow Else cbs2.value = DnArrow
  If ArrSort3Order(FTindex)="+" Then cbs3.value = UpArrow Else cbs3.value = DnArrow
  If ArrSort4Order(FTindex)="+" Then cbs4.value = UpArrow Else cbs4.value = DnArrow
  
  If ArrSort2(FTindex)="" Then cbs2.value = "X"
  If ArrSort3(FTindex)="" Then cbs3.value = "X"
  If ArrSort4(FTindex)="" Then cbs4.value = "X"

  ArrColumnList = Split(ArrColumnLists(FTindex),";")

  Order = 0
  For i = 0 To UBound(ArrColumnList)
    ArrColumnEntry = Split(ArrColumnList(i),",")
    C1 = ArrColumnEntry(2)
    Pidx = "P~" & C1: Widx = "W~" & C1: Nidx = "N~" & C1: Midx = "M~" & C1: 
    Show = ArrColumnEntry(0)
    On Error Resume Next
    document.getElementById(Pidx).checked = True
    If Show="0" Then
      document.getElementById(Nidx).value = Order
      document.getElementById(Midx).checked = True
    End If
    document.getElementById(Widx).value = ArrColumnEntry(1)
    On Error Goto 0
    Order = Order + 1
  Next

  CheckCount = i
  cs.innerHTML = document.getElementById(FTindex & "ColShow").innerHTML
  SetColShowColor
  P2tt.innerHTML = ArrFolderTypeLang(FTindex)

  tab2.style.lineHeight = Int(Scale * 10) & "pt"

  YScrollPos = document.documentElement.scrollTop
  Pg1.style.display = "none"
  Pg2.style.display = "inline"
  Pg3.style.display = "none"
  tcin.style.marginTop = fix2.scrollHeight - Int(Scale * 20)
  window.scrollTo 0, 0
End Sub

' Generate column heading list based with click order data included

Sub GenColShow

  j = -1
  For i = 0 To UBound(ArrColData)
    If ArrColData(i)<>"" Then
      ArrColDataItem = Split(ArrColData(i),";")
      C1 = ArrColDataItem(1): C2 = ArrColDataItem(0)
      Pidx = "P~" & C1: Widx = "W~" & C1: Nidx = "N~" & C1
      Show = "": sOrder = ""
      sOrder = document.getElementById(Nidx).value
      If sOrder<>"" Then
        Show = "0"
      Else
        If document.getElementById(Pidx).checked Then Show = "1"
      End If
      If Show<>"" Then
        ColWid = document.getElementById(Widx).value
        j = j + 1
        ArrData(j) = Show & ";" & Right("000" & sOrder, 3) & ";" & ColWid & ";" & ArrColData(i)
      End If
    End If
  Next

  LastColSel = j

  ' Sort list
  
  x = LastColSel - 1
  For i = x To 0 Step -1
    For j= 0 To i
    If ArrData(j)>ArrData(j+1) Then
      y = ArrData(j+1)
      ArrData(j+1) = ArrData(j)
      ArrData(j) = y
    End If
    Next
  Next

  ' Create list to be displayed

  Data = ""
  ColShow = ""
  ColShowLabels = ""
  For i = 0 To LastColSel
    ArrColumnEntry = Split(ArrData(i),";")
    If Data<>"" Then Data = Data & ";"
    Data = Data & ArrColumnEntry(0) & "," & ArrColumnEntry(2) & "," & ArrColumnEntry(4)
    If ArrColumnEntry(0)="0" Then
      If ColShow<>"" Then ColShow = ColShow & " | "
      If ColShowLabels<>"" Then ColShowLabels = ColShowLabels & "|"
      ColShowColor(ArrColumnEntry(4))
      ColShow = ColShow & "<span class=" & x & ">" & ArrColumnEntry(3) & "</span>"
      ColShowLabels = ColShowLabels & ArrColumnEntry(3)
    End If
  Next

  ' Display column heading list
  cs.innerHTML = ColShow
  SetColShowColor

End Sub

' Return values from column selection page

Sub P2Exit

  GenColShow
  
  ArrColumnLists(FTindex) = Data
  document.getElementById(FTindex & "ColShow").innerHTML = ColShow
  SetColShowColor
  
  If cbg.value="X" Then ArrGroupBy(FTindex)=""
  If ArrGroupBy(FTindex)="" Then
    document.getElementById(FTindex & "GroupBy").innerHTML = ArrView(9) 'None
  Else
    On Error Resume Next
    document.getElementById(FTindex & "GroupBy").innerHTML = ArrGroupByOrder(FTindex) & document.getElementById("L~" & ArrGroupBy(FTindex)).value
    On Error Goto 0
  End If

  If cbs2.value="X" Then ArrSort2(FTindex)=""
  If cbs3.value="X" Then ArrSort3(FTindex)=""
  If cbs4.value="X" Then ArrSort4(FTindex)=""

  On Error Resume Next
  SortBy = ArrSort1Order(FTindex) & document.getElementById("L~" & ArrSort1(FTindex)).value
  If ArrSort2(FTindex)<>"" Then SortBy = SortBy & ", " & ArrSort2Order(FTindex) & document.getElementById("L~" & ArrSort2(FTindex)).value
  If ArrSort3(FTindex)<>"" Then SortBy = SortBy & ", " & ArrSort3Order(FTindex) & document.getElementById("L~" & ArrSort3(FTindex)).value
  If ArrSort4(FTindex)<>"" Then SortBy = SortBy & ", " & ArrSort4Order(FTindex) & document.getElementById("L~" & ArrSort4(FTindex)).value
  On Error Goto 0
  document.getElementById(FTindex & "SortBy").innerHTML = SortBy
  
  InheritUpdate(i)

  Back2Pg1

End Sub

' Return to main page

Sub Back2Pg1
  Pg5.style.display = "none"
  Pg4.style.display = "none"
  Pg3.style.display = "none"
  Pg2.style.display = "none"
  Pg1.style.display = "inline"
  document.documentElement.style.overflow = "auto"
  window.scrollTo 0, YScrollPos
End Sub

' Event handlers for main page:

Sub OptionReset
  If wd.checked Then
    FTHide = True
    Sec1.style.visibility = "hidden"
    ob.style.display = "none"
    lb.style.visibility = "hidden"
    sb.style.visibility = "hidden"
  Else
    FTHide = False
    Sec1.style.visibility = "visible"
    ob.style.display = "inline"
    If IFace.selectedIndex=2 Then
      lb.style.visibility = "visible"
      sb.style.visibility = "visible"
    End If
  End If
  For i = 1 To UBFolderType
    FTHideUnHide i,FTHide
  Next
End Sub

Sub OptionSearchOnly
  Set oElements = document.getElementsByTagName("span")
  x = ""
  If HighContrast Then x = x & "HC"
  For Each oElement in oElements
    If oElement.className="X3" & x Then
      oElement.className = "X4" & x
    Else
      If oElement.className="X4" & x Then oElement.className = "X3" & x
    End If
  Next
  SetColShowColor
End Sub

Sub OptionTS
  If ts.checked Then
    tss.style.display = "inline"
  Else
    tss.style.display = "none"
  End If
End Sub

Sub OptionLS
  If ls.checked Then
    lss.style.display = "inline"
  Else
    lss.style.display = "none"
  End If
End Sub

Sub OptionLSDiv
  If DarkMode Then
    LSDiv.style.display = "none"
    lss.style.display = "none"
  End If
End Sub

Sub OptionES
  If es.checked Then
    esd.style.display = "inline"
    If rbes4.checked Then
      esd2.style.display = "inline"
    Else
      esd2.style.display = "none"
    End If
  Else
    esd.style.display = "none"
    esd2.style.display = "none"
  End If
End Sub

Sub OptionThisPC
  If tp.checked Then
    otp.style.display = "block"
  Else
    otp.style.display = "none"
  End If
End Sub

Sub IconSizeUpdate(i)

  ArrIconSize(i) = ""
  
  Select Case ArrViewChoice(i)
    Case "5"
     ArrIconSize(i) = "16"
    Case "6"
     ArrIconSize(i) = "48"
    Case "7"
     ArrIconSize(i) = "96"
    Case "8"
     ArrIconSize(i) = "256"
  End Select
  
  Set o = document.getElementById(i & "IconSize")
  o.value = ArrIconSize(i)
  If ArrIconSize(i)="" Then
    o.disabled = True
    o.style.backgroundColor = oThemes.item(sTheme & "InputDisabledBackground")
  Else
    o.disabled = False
    o.style.backgroundColor = oThemes.item(sTheme & "InputBackground")
  End If
End Sub

Sub ViewChange(i)
  ArrViewChoice(i) = document.getElementById(i & "View").value
  IconSizeUpdate(i)
  InheritUpdate(i)
End Sub

Sub IconSizeChange(i)
  ArrIconSize(i) = document.getElementById(i & "IconSize").value
  InheritUpdate(i)
End Sub

Sub InheritChange(i)
  ArrInheritFlag(i) = Abs(Int(document.getElementById(i & "Inherit").checked))
  If ArrInheritFlag(i)="1" Then
    document.getElementById(i & "FTcontrols").style.display = "none"
    document.getElementById(i & "FTView").style.display = "block"
  Else
    document.getElementById(i & "FTcontrols").style.display = "block"
    document.getElementById(i & "FTView").style.display = "none"
  End If
  InheritUpdate(i)
End Sub

Sub InheritUpdate(i)
  For i = 1 To UBFolderType
    If document.getElementById(i & "Inherit").checked Then
      ArrViewChoice(i) = ArrViewChoice(ArrInherit(i))
      ArrIconSize(i) = ArrIconSize(ArrInherit(i))
      ArrColumnLists(i) = ArrColumnLists(ArrInherit(i))
      ArrGroupBy(i) = ArrGroupBy(ArrInherit(i))
      ArrGroupByOrder(i) = ArrGroupByOrder(ArrInherit(i))
      ArrFD(i) = ArrFD(ArrInherit(i))
      ArrFDV(i) = ArrFDV(ArrInherit(i))
      ArrFDG(i) = ArrFDG(ArrInherit(i))
      ArrSort1(i) = ArrSort1(ArrInherit(i))
      ArrSort1Order(i) = ArrSort1Order(ArrInherit(i))
      ArrSort2(i) = ArrSort2(ArrInherit(i))
      ArrSort2Order(i) = ArrSort2Order(ArrInherit(i))
      ArrSort3(i) = ArrSort3(ArrInherit(i))
      ArrSort3Order(i) = ArrSort3Order(ArrInherit(i))
      ArrSort4(i) = ArrSort4(ArrInherit(i))
      ArrSort4Order(i) = ArrSort4Order(ArrInherit(i))

      document.getElementById(i & "View").selectedIndex = ArrViewChoice(i)
      document.getElementById(i & "IconSize").value = ArrIconSize(i)
      If ArrIconSize(i)="" Then x = "" Else x = " [" & ArrIconSize(i) & "]"
      document.getElementById(i & "FTView").innerHTML = ArrView(0) & ": " & ArrView(ArrViewChoice(i)) & x
      document.getElementById(i & "GroupBy").innerHTML = document.getElementById(ArrInherit(i) & "GroupBy").innerHTML
      document.getElementById(i & "SortBy").innerHTML = document.getElementById(ArrInherit(i) & "SortBy").innerHTML
      document.getElementById(i & "ColShow").innerHTML = document.getElementById(ArrInherit(i) & "ColShow").innerHTML

      UpdateFDView(i)
    End If
  Next
End Sub

Sub IncludeChange(i)
  ArrIncludeFlag(i) = Abs(Int(document.getElementById(i & "Include").checked))
  FTHideUnHide i,False
  InheritUpdate(i)
End Sub

Sub IncludeAll
  For i = 1 To UBFolderType
    ArrIncludeFlag(i) = Abs(Int(ica.checked))
    FTHideUnHide i,False
    InheritUpdate(i)
  Next
End Sub

' Event handlers for column selection page buttons:

Sub GroupByClick
  x = cbg.value
  Select Case x
    Case GrpUpArrow
      cbg.value = GrpDnArrow
      ArrGroupByOrder(FTindex) = "-"
    Case GrpDnArrow
      cbg.value = "X"
      For i = 0 To UBound(ArrColData)
        GroupBy(i).style.visibility = "hidden"
      Next
    Case "X"
      cbg.value = GrpUpArrow
      ArrGroupByOrder(FTindex) = "+"
      For i = 0 To UBound(ArrColData)
        GroupBy(i).style.visibility = "visible"
      Next
  End Select
End Sub

Sub SortBy1Click
  If cbs1.value=UpArrow Then
    cbs1.value = DnArrow
    ArrSort1Order(FTindex) = "-"
  Else
    cbs1.value = UpArrow
    ArrSort1Order(FTindex) = "+"
  End If
End Sub

Sub SortBy2Click
  x = cbs2.value
  Select Case x
    Case UpArrow
      cbs2.value = DnArrow
      ArrSort2Order(FTindex) = "-"
    Case DnArrow
      cbs2.value = "X"
      ArrSort2Order(FTindex) = "+"
      For i = 0 To UBound(ArrColData)
        RBS2(i).style.visibility = "hidden"
      Next
    Case "X"
      cbs2.value = UpArrow
      ArrSort2Order(FTindex) = "+"
      For i = 0 To UBound(ArrColData)
        RBS2(i).style.visibility = "visible"
      Next
  End Select
End Sub

Sub SortBy3Click
  x = cbs3.value
  Select Case x
    Case UpArrow
      cbs3.value = DnArrow
      ArrSort3Order(FTindex) = "-"
    Case DnArrow
      cbs3.value = "X"
      ArrSort3Order(FTindex) = "+"
      For i = 0 To UBound(ArrColData)
        RBS3(i).style.visibility = "hidden"
      Next
    Case "X"
      cbs3.value = UpArrow
      ArrSort3Order(FTindex) = "+"
      For i = 0 To UBound(ArrColData)
        RBS3(i).style.visibility = "visible"
      Next
  End Select
End Sub

Sub SortBy4Click
  x = cbs4.value
  Select Case x
    Case UpArrow
      cbs4.value = DnArrow
      ArrSort4Order(FTindex) = "-"
    Case DnArrow
      cbs4.value = "X"
      ArrSort4Order(FTindex) = "+"
      For i = 0 To UBound(ArrColData)
        RBS4(i).style.visibility = "hidden"
      Next
    Case "X"
      cbs4.value = UpArrow
      ArrSort4Order(FTindex) = "+"
      For i = 0 To UBound(ArrColData)
        RBS4(i).style.visibility = "visible"
      Next
  End Select
End Sub

' Event handlers for column (property) selection page items:
' The id is the property name

Sub CBMClick(id)
  If document.getElementById("M~" & id).checked Then
    If Not document.getElementById("P~" & id).checked Then
      If CheckCount=21 Then
        document.getElementById("M~" & id).checked = False
        MsgBox "☑ > 21",vbCritical
        Exit Sub
      Else
        document.getElementById("P~" & id).checked = True
        CheckCount = CheckCount + 1
      End If
    End If
    Order = Order + 1
    document.getElementById("N~" & id).value = Order
  Else
    document.getElementById("N~" & id).value = ""
  End If
  GenColShow
End Sub

Sub CBPClick(id)
  If document.getElementById("P~" & id).checked Then
    If CheckCount=21 Then
      document.getElementById("P~" & id).checked = False
      MsgBox "☑ > 21",vbCritical
      Exit Sub
    Else
      CheckCount = CheckCount + 1
    End If
  Else
    CheckCount = CheckCount - 1
    If document.getElementById("M~" & id).checked Then
      document.getElementById("M~" & id).checked = False
      document.getElementById("N~" & id).value = ""
      GenColShow
    End If
  End If
End Sub

Sub RBGClick(id)
  ArrGroupBy(FTindex) = document.getElementById("G~" & id).value
End Sub

Sub RBS1Click(id)
  ArrSort1(FTindex) = document.getElementById("S1~" & id).value
End Sub

Sub RBS2Click(id)
  ArrSort2(FTindex) = document.getElementById("S2~" & id).value
End Sub

Sub RBS3Click(id)
  ArrSort3(FTindex) = document.getElementById("S3~" & id).value
End Sub

Sub RBS4Click(id)
  ArrSort4(FTindex) = document.getElementById("S4~" & id).value
End Sub

Sub WidthClick
  DialogTop = window.event.clientY - Int(Scale * 25)
  If Modal(LRArrow, ArrLang(26), DialogTop)="1" Then
    For i = 0 To UBound(ArrColData)
      If ArrColData(i)<>"" Then
        ArrColDataItem = Split(ArrColData(i),";")
        Widx = "W~" & ArrColDataItem(1)
        document.getElementById(Widx).value = ""
      End If
    Next
  End If
End Sub

Sub View1Click
  DialogTop = window.event.clientY - Int(Scale * 25)
  If Modal(DetailsIcon, ArrLang(26), DialogTop)="1" Then
    For i = 0 To UBound(ArrColData)
      If ArrColData(i)<>"" Then
        ArrColDataItem = Split(ArrColData(i),";")
        C1 = ArrColDataItem(1)
        Pidx = "P~" & C1: Midx = "M~" & C1: Nidx = "N~" & C1
        If C1<>"ItemNameDisplay" And document.getElementById(Midx).checked=True Then
          document.getElementById(Midx).checked = False
          document.getElementById(Nidx).value = ""
        End If
      End If
    Next
    cs.innerHTML = Split(ArrColData(0),";")(0)
  End If
End Sub

Sub View2Click
  Dim ClearAll: ClearAll = False
  DialogTop = window.event.clientY - Int(Scale * 25)
  If Modal(RightClickIcon, ArrLang(26), DialogTop)="1" Then
    If window.event.altKey Then ClearAll = True
    For i = 0 To UBound(ArrColData)
      If ArrColData(i)<>"" Then
        ArrColDataItem = Split(ArrColData(i),";")
        C1 = ArrColDataItem(1)
        Pidx = "P~" & C1: Midx = "M~" & C1: Nidx = "N~" & C1
        If C1<>"ItemNameDisplay" Then
          If ClearAll Then
            document.getElementById(Pidx).checked = False
            document.getElementById(Midx).checked = False
            document.getElementById(Nidx).value = ""
          Else
            If document.getElementById(Midx).checked = False Then
              If document.getElementById(Pidx).checked=True Then
                document.getElementById(Pidx).checked = False
                CheckCount = CheckCount - 1
              End If
            End If
          End If
        End If
      End If
    Next
    If ClearAll Then
      cs.innerHTML = Split(ArrColData(0),";")(0)
      CheckCount = 1
    End If
  End If
End Sub

Sub Txt1Scroll
  Txt2.scrollTop = Txt1.scrollTop
  Txt2.scrollLeft = Txt1.scrollLeft
End Sub

Sub Txt2Scroll
  Txt1.scrollTop = Txt2.scrollTop
  Txt1.scrollLeft = Txt2.scrollLeft
End Sub

' Set page elements to selected font and size

Sub UpdateFont1
  SelectedFont1 = Font1.Options(Font1.selectedIndex).value
  SelectedSize1 = Size1.Options(Size1.selectedIndex).value
  Scale = (SelectedSize1/10) * BaseScale
  
  document.body.style.fontFamily = SelectedFont1
  document.body.style.fontSize = SelectedSize1 & "pt"

  Set oElements = document.getElementsByTagName("input")
  For Each oElement in oElements
    If oElement.Type="button" Or oElement.Type="text" Then
      If oElement.className<>"icon" Then oElement.style.fontFamily = SelectedFont1
      oElement.style.fontSize = SelectedSize1 & "pt"
    End If
    If oElement.Type="checkbox" Or oElement.Type="radio" Then
      oElement.style.zoom = Scale
    End If
  Next

  BkP2.style.fontFamily = "WingDings"
  BkP3.style.fontFamily = "WingDings"
  BkP4.style.fontFamily = "WingDings"
  BkP5.style.fontFamily = "WingDings"

  Set oElements = document.getElementsByTagName("select")
  For Each oElement in oElements
    oElement.style.fontFamily = SelectedFont1
    oElement.style.fontSize = SelectedSize1 & "pt"
  Next

  UpdateRequiredWidth

  UpdateCheck

  Recenter

  Sec1.style.marginTop = fix1.scrollHeight
  
  ' Refresh page
  Pg1.style.display = "none"
  Pg1.style.display = "inline"

End Sub

Sub RecenterButton
  WinSizePos = ""
  Recenter
End Sub

'Resize and position window
Sub Recenter
  If  WinSizePos="" Then
    self.resizeTo RequiredWidth, screen.availHeight
    self.moveTo (screen.availWidth - RequiredWidth) / 2, TaskbarAdjust(4)
  End If
End Sub

Sub UpdateFont2
  SelectedFont2 = Font2.Options(Font2.selectedIndex).value
  Txt1.style.fontFamily = SelectedFont2
  Txt2.style.fontFamily = SelectedFont2
  Pg3.style.display = "none"
  Pg3.style.display = "inline"
End Sub

Sub UpdateSize2
  SelectedSize2 = Size2.Options(Size2.selectedIndex).value
  Txt1.InnerText = ""
  Txt2.InnerText = ""
  Txt1.value = Txt1Data
  Txt2.value = Txt2Data
  Txt1.style.fontSize = SelectedSize2 & "pt"
  Txt2.style.fontSize = SelectedSize2 & "pt"
  Pg3.style.display = "none"
  Pg3.style.display = "inline"
End Sub

' Change width of display columns class based on 1-9 value selected in dropdown menu.
' This effectively goes from no horizontal scroll bar (1=100%) up to 900% to allow
' column heading list to wrap or be displayed on a single line, even if a large number
' of column headings are selected.

Sub xschange
  x = xs.selectedIndex
  If x=1 Then v = "" Else v = Int(RequiredWidth * x)
  Set oElements = document.getElementsByTagName("div")
  For Each oElement in oElements
    If oElement.className="cta" Then oElement.style.width = v
  Next
  xs.blur
End Sub

Sub ShowC1(id)
  document.getElementById("V~" & id).innerHTML = id
End Sub

Sub ShowC2(id,ftname)
  document.getElementById("V~" & id).innerHTML = Replace(ftname,"`","'")
End Sub

Sub PixelInput(id)
  If Not window.event.altKey Then Exit Sub
  a = document.getElementById("W~" & id).value
  b = ""
  If IsNumeric(a) Then b = Int(BaseScale * 8 * a)
  b = Modal(LRArrow & ".", ArrLang(28) & ";" & b, window.event.clientY - Int(Scale * 50))
  If Not IsNumeric(b) Then b = ""
  If b<>"" Then 
    b = Abs(Int(b))
    c = Int(b / BaseScale / 8)
    If c>999 Then c = 999
    If c<1 Then c = 1
    document.getElementById("W~" & id).value = c
  End If
End Sub

Sub SetInterface
  If IFace.selectedIndex=1 Then
    lb.style.visibility = "hidden"
    sb.style.visibility = "hidden"
    ica.style.display = "none"
    For i = 1 To UBFolderType
      document.getElementById(i & "Inspect").style.display = "none"
    Next
  Else
    If Not wd.checked Then
      lb.style.visibility = "visible"
      sb.style.visibility = "visible"
      ica.style.display = "inline"
      For i = 1 To UBFolderType
        If ArrIncludeFlag(i)="1" Then document.getElementById(i & "Inspect").style.display = "inline"
      Next
    End If
  End If
  IFace.blur
End Sub

Sub SetTheme
  If UBound(ArrThemes)=-1 Then Exit Sub
  sTheme = "[" & ArrThemes(Theme.selectedIndex-1) & "]"

  ' Colors also used modal dialogs
  aColor(0) = oThemes.item(sTheme & "MainText")
  aColor(1) = oThemes.item(sTheme & "MainBackground")
  aColor(2) = oThemes.item(sTheme & "ButtonBackground")
  
  document.body.style.color = oThemes.item(sTheme & "MainText")
  document.body.style.backgroundColor = oThemes.item(sTheme & "MainBackground")
  fix1.style.backgroundColor = oThemes.item(sTheme & "MainBackground")
  fix2.style.backgroundColor = oThemes.item(sTheme & "MainBackground")
  fix4.style.backgroundColor = oThemes.item(sTheme & "MainBackground")
  fix5.style.backgroundColor = oThemes.item(sTheme & "MainBackground")
  Txt1.style.color = oThemes.item(sTheme & "InspectText")
  Txt1.style.backgroundColor = oThemes.item(sTheme & "InspectBackground")
  Txt2.style.color = oThemes.item(sTheme & "InspectText")
  Txt2.style.backgroundColor = oThemes.item(sTheme & "InspectBackground")
  SetColShowColor
  Set oElements = document.getElementsByTagName("select")
  For Each oElement in oElements
    oElement.style.color = oThemes.item(sTheme & "SelectText")
    oElement.style.backgroundColor = oThemes.item(sTheme & "SelectBackground")
    oElement.style.borderColor = oThemes.item(sTheme & "SelectBorder")
  Next
  Set oElements = document.getElementsByTagName("input")
  For Each oElement in oElements
    If oElement.Type="button" Then
      oElement.style.color = oThemes.item(sTheme & "ButtonText")
      oElement.style.backgroundColor = oThemes.item(sTheme & "ButtonBackground")
      oElement.style.borderColor = oThemes.item(sTheme & "ButtonBorder")
    End If
    If oElement.Type="text" Then
      oElement.style.color = oThemes.item(sTheme & "InputText")
      oElement.style.borderColor = oThemes.item(sTheme & "InputBorder")
      If oElement.disabled = True Then
        oElement.style.backgroundColor = oThemes.item(sTheme & "InputDisabledBackground")
      Else
        oElement.style.backgroundColor = oThemes.item(sTheme & "InputBackground")
      End If
    End If
  Next
  Theme.blur
End Sub

Sub SetColShowColor
  Set oElements = document.getElementsByTagName("span")
  For Each oElement in oElements
    If oElement.className="X1" Then oElement.style.color = oThemes.item(sTheme & "MainText")
    If oElement.className="X2" Then oElement.style.color = oThemes.item(sTheme & "SearchPropText")
    If oElement.className="X3" Then oElement.style.color = oThemes.item(sTheme & "MainText")
    If oElement.className="X4" Then oElement.style.color = oThemes.item(sTheme & "SearchPropText")
  Next
End Sub

Sub Help(URL)
  If NewerAvailable And URL="https://lesferch.github.io/WinSetView/#how-to-use" Then
    URL = "https://lesferch.github.io/WinSetView/"
  End If
  On Error Resume Next
  oWSH.Run URL
  If Err.number<>0 Then MsgBox "An error occurred attempting to open" & Z & Z & x
  On Error GoTo 0
End Sub

' HTML interface starts here with the script-generated pages

Sub BuildPages
  
  'Build page of Folder Types
  For i = 0 To UBFolderType
    Dim Xinc, Xcop, Xpas, Xln2, Xvue
    Xinc = "":Xcop = "": Xpas = "": Xln2 =""
    If i>0 Then
      Xinc = "<input type=checkbox id=" & i & "Include onclick=IncludeChange(" & i & ") Checked>"
      Xcop = "<div class=tip><input type=button class=icon id=" & i & "Copy value=📋 onclick=FTCopy(" & i & ")><span class=tiptext># 40 #</span></div> "
      Xpas = "<div class=tip><input type=button class=icon id=" & i & "Paste value=🖌️ onclick=FTPaste(" & i & ")><span class=tiptext># 41 #</span></div>"
      Xln2 = "<div class=fo><input type=checkbox id=" & i & "Inherit onclick=InheritChange(" & i & ") Checked># 21 # <input type=button class=icon id=" & i & "Inspect value=🔍 style='padding:0' onclick=Inspection(" & i & ")></div>"
      Xvue = "<div class=fo id=" & i & "FTView></div>"
    End If
    ArrHTML1(i) = Xinc & "<div class=ft id=" & i & "FTtitle>" & ArrFolderTypeLang(i) & "</div><br>" & Z &_
    "<div id=" & i & "FTsettings>" & Xln2 & Z &_
    "<div class=fo id=" & i & "FTcontrols><select id=" & i & "View onchange=ViewChange(" & i & ")></select>" & Z &_
    "<input type=text class=is id=" & i & "IconSize OnChange=IconSizeChange(" & i & ")>" & Z &_
    "<input type=button id=" & i & "SelCol value='# 24 #' onclick=SelectColumns(" & i & ")>" & Z &_
    "<div class=tip><input type=button class=icon id=" & i & "Option value=⚙ onclick=FTOptions(" & i & ")><span class=tiptext># 3 #</span></div>" & Z &_
    Xcop & Xpas & "</div>" & Z &_
    Xvue & Z &_
    "<div class=cta id=" & i & "ColShow></div>" & Z &_
    "<div class=fo># 22 #: <span id=" & i & "GroupBy></span></div>" & Z &_
    "<div class=fo># 23 #: <span id=" & i & "SortBy></span></div>" & Z &_
    "<div class='fo noshow' id=" & i & "FTDialogView># 44 #: <span id=" & i & "DialogView></span></div>" & Z &_
    "</div><br><br>" & Z
  Next

  'Build column heading selection page
  For i = 0 To UBound(ArrColData)
    If ArrColData(i)="" Then ReDim Preserve ArrColData(UBound(ArrColData)-1): Exit For
    ArrColumnEntry = Split(ArrColData(i),";")
    C1 = ArrColumnEntry(1): C2 = ArrColumnEntry(0)
    ColShowColor(C1)
    ArrHTML2(i) = "<tr>" &_
    "<td><input type=radio name=GroupBy onclick=RBGClick('" & C1 & "') id=G~" & C1 & " Value='" & C1 & "'></td>" &_
    "<td><input type=radio name=RBS1 onclick=RBS1Click('" & C1 & "') id=S1~" & C1 & " Value='" & C1 & "'></td>" &_
    "<td><input type=radio name=RBS2 onclick=RBS2Click('" & C1 & "') id=S2~" & C1 & " Value='" & C1 & "'></td>" &_
    "<td><input type=radio name=RBS3 onclick=RBS3Click('" & C1 & "') id=S3~" & C1 & " Value='" & C1 & "'></td>" &_
    "<td><input type=radio name=RBS4 onclick=RBS4Click('" & C1 & "') id=S4~" & C1 & " Value='" & C1 & "'></td>" &_
    "<td><input type=text class=cw id=W~" & C1 & " maxlength=3 onclick=PixelInput('" & C1 & "')></td>" &_
    "<td><input type=checkbox onclick=CBMClick('" & C1 & "') id=M~" & C1 & " Value='" & C1 & "'></td>" &_
    "<td><input type=checkbox onclick=CBPClick('" & C1 & "') id=P~" & C1 & " Value='" & C1 & "'></td>" &_
    "<td><span id=V~" & C1 & " class=" & x & " onmouseover='ShowC1 " & Q & C1 & Q &_
    "' onmouseout='ShowC2 " & Q & C1 & Q & "," & Q & Replace(C2,"'","`") & Q & "'>" & C2 & "</span></td>" &_
    "<td><input type=text style=display:none id=L~" & C1 & " Value='" & C2 & "'></td>" &_
    "<td><input type=text style=display:none id=N~" & C1 & "></td></tr>"
  Next

  BodyHTML = TaggedHTML
  BodyHTML = Replace(BodyHTML,"+++",Join(ArrHTML1))
  BodyHTML = Replace(BodyHTML,"~~~",Join(ArrHTML2))
  
  '0 not used, 1 is title, 2 is first label
  For i = 2 To UBound(ArrLang)
    Tag = "# " & i & " #"
    Item = ArrLang(i)
    If Item<>"" Then
      BodyHTML = Replace(BodyHTML,Tag,Item)
    End If
  Next

  If WinVer="7" Or WinVer="8" Then BodyHTML = Replace(BodyHTML,"⮬","↑")

  document.body.innerHTML = BodyHTML

End Sub

Sub document_onKeyDown
  'Recenter window if F1-F12 is pressed (also prevents F5 or Ctrl-F5 refresh)
  If window.event.keyCode>=112 And window.event.keyCode<=123 Then
    window.event.keyCode = 0
    WinSizePos = ""
    Recenter
  End If
End Sub

Sub UpdateESI
  esi.value = ess.options(ess.selectedIndex).value
  ess.selectedIndex = 0
  ess.blur
End Sub

Sub OptionESI
  ess.selectedIndex = 0
  esi.select
End Sub

Sub OptionESB
  Set oFolder = oApp.BrowseForFolder(0,"",1,"")
  If oFolder is Nothing Then Exit Sub
  esi.value = ""
  esi.value = oFolder.self.path
  ess.selectedIndex = 0
End Sub

</script>

<style>
  @font-face {font-family:Segoe UI Emoji; src:url(seguiemj.eot)}
  body  {background-color:#B8D8E9; font-family:Segoe UI; font-size:11pt}
  input[type="button"] {font-family:Segoe UI Emoji; font-size:11pt}
  .icon {font-family:Segoe UI Emoji}
  select {font-family:Segoe UI; font-size:11pt}
  textarea {font-family:Consolas; font-size:10pt}
  h2    {font-size:1.5em}
  h3    {font-size:1.2em}
  .cta  {margin-top:5pt; width:100%}
  #fix1 {position:fixed; left:0; top:0; width:100%; background-color:#B8D8E9}
  #f1in {margin-left:5pt; margin-top:5pt}
  #twid {display:inline; white-space:nowrap}
  #bwid {display:inline; white-space:nowrap}
  #Sec1 {margin-top:106pt}
  #fix2 {position:fixed; left:0; top:0; width:100%; background-color:#B8D8E9}
  #f2in {margin-top:5pt; margin-bottom:0pt}
  #Pg1  {visibility:hidden}
  #Pg2  {display:none}
  #Pg3  {display:none}
  #fix4 {position:fixed; left:0; top:0; width:100%; background-color:#B8D8E9}
  #f4in {margin-left:5pt; margin-right:5pt}
  #fix5 {position:fixed; left:0; top:0; width:100%; background-color:#B8D8E9}
  #f5in {margin-left:5pt; margin-right:5pt}
  #Pg4  {display:none}
  #Pg5  {display:none}
  .cw   {width:38%; height:100%; font-size:1em}
  #BkP2 {float:right; margin-right:10pt; font-family:WingDings; width:3em}
  #BkP3 {float:right; font-family:WingDings; width:3em}
  #BkP4 {float:right; font-family:WingDings; width:3em}
  #BkP5 {float:right; font-family:WingDings; width:3em}
  .fl1  {float:left; margin-left:5pt}
  .fl2  {float:left; margin-left:3pt}
  .fl3  {float:left; margin-left:3pt; margin-right:3pt}
  .ft   {font-size:1.2em; font-weight:bold; margin-top:1pt; margin-bottom:1pt; display:inline}
  .ftl  {font-size:1.2em; font-weight:light; margin-top:1pt; margin-bottom:1pt; display:inline}
  .ft2  {font-weight:bold; margin-top:1pt; margin-bottom:1pt; margin-left:5pt}
  .fo   {margin-top:5pt}
  #tab1 {margin-bottom:5pt; margin-top:9pt; margin-left:11px; border-collapse:collapse}
  #tcin {margin-top:62pt}
  #tab2 {border-collapse:collapse}
  #cs   {width:98%; margin-left:5pt; margin-top:8pt; white-space:nowrap; overflow-x:scroll}
  #Txt1 {width:100%; margin-top:5pt; overflow:auto}
  #Txt2 {width:100%; margin-top:5pt; overflow:auto}
  .X1   {color:black}
  .X2   {color:blue}
  .X3   {color:black}
  .X4   {color:blue}
  .X1HC {font-style:normal}
  .X2HC {font-style:italic}
  .X3HC {font-style:normal}
  .X4HC {font-style:italic}
  #tpv  {margin-left:1.5em; margin-top:3pt}
  .is   {width:2em}
  .noshow {display:none}
  .opt  {line-height:250%}
  .shield {height:1em; vertical-align:middle}

  #tab1 tbody td {text-align:center}
  #tab2 tbody td {text-align:center}
  #tab2 tbody td+td+td+td+td+td+td+td+td {text-align:left}

  .tip {
    display:inline;
    font-weight:normal;
    color:Black
  }
  .tiptext {
    visibility:hidden;
    position:absolute;
    z-index:1;
    white-space:nowrap;
    background-color:Azure;
    text-align:center;
    padding:0.3em 0.3em 0.3em 0.3em;
    border:1px solid black;
    margin-top:2.2em;
    margin-left:-1.5em
  }
  .tip:hover .tiptext {
    visibility:visible
  }

</style>
</head>
<body>
  <div id=Pg1>
    <div id=fix1>
    <div id=f1in>
      <div id=twid>
        <div class=tip><input type=button id=hb value='# 31 #' onclick=Help("https://lesferch.github.io/WinSetView/#how-to-use")>
        <span id=Vp1 class=tiptext></span></div>
        <div class=tip><input id=bc1 type=button value='⛶' onclick=RecenterButton()>
        <span class=tiptext># 42 #</span></div>
        <select id=Lang onchange='UpdateLang(1)'></select>
        <select id=IFace onchange='SetInterface()'>
          <option selected disabled># 32 #</option>
          <option># 33 #</option>
          <option># 34 #</option>
        </select>
        <select id=Font1 onchange=UpdateFont1()></select>
        <select id=Size1 onchange=UpdateFont1()></select>
        <select id=xs onchange=xschange()></select>
        <select id=Theme onchange=SetTheme()>
        </select>
      </div>
      <br><br>
      <input type=checkbox id=wd onclick=OptionReset()># 7 # &nbsp &nbsp
      <input type=checkbox id=bu ># 72 # &nbsp &nbsp
      <div class=tip><input type=button id=lb class=icon value='📄' onclick=LoadSettings()><span class=tiptext># 4 #</span></div>
      <div class=tip><input type=button id=sb class=icon value='📝' onclick=SaveSettings()><span class=tiptext># 5 #</span></div>
      <br><br>
      <div id=bwid>
        <input type=button id=xb value='# 2 #' onclick=Submit()>
        <input type=button id=ob value='# 69 #' onclick=FVOptions()>
        <input type=button id=eb value='# 70 #' onclick=ExpOptions()>
        <input type=button id=rb value='# 6 #' onclick=Restore()>
        <br><br>
      </div>
    </div>
    </div>
    <div id=Sec1>
    <input type=checkbox id=ica onclick=IncludeAll() Checked>
    +++
    </div>
  </div>

  <div id=Pg2>
    <div id=fix2>
    <div id=f2in>
      <input type=button value='&#223;' id=BkP2 onclick=P2Exit()>
      <div class='tip fl1'><input type=button value='# 31 #' onclick=Help("https://lesferch.github.io/WinSetView/Manual.html#columns")>
      <span id=Vp2 class=tiptext></span></div>
      <div class='tip fl2'><input id=bc2 type=button value='⛶' onclick=RecenterButton()>
      <span class=tiptext># 42 #</span></div>
      <div class='tip fl3'><input id=ba type=button value='⮀' onclick=Arrange()>
      <span class=tiptext># 36 #</span></div>
      <h3 id=P2tt class=ft2></h3>
      <div id=cs></div>
      <table id=tab1>
        <colgroup>
          <col style='width:3.2em; min-width:3.2em; max-width:3.2em'>
          <col style='width:1.9em; min-width:1.9em; max-width:1.9em'>
          <col style='width:1.9em; min-width:1.9em; max-width:1.9em'>
          <col style='width:1.9em; min-width:1.9em; max-width:1.9em'>
          <col style='width:1.9em; min-width:1.9em; max-width:1.9em'>
          <col style='width:4.6em; min-width:4.6em; max-width:4.6em'>
          <col style='width:3.0em; min-width:3.0em; max-width:3.0em'>
          <col style='width:3.0em; min-width:3.0em; max-width:3.0em'>
        </colgroup>
        <tbody>
          <tr>
          <th><div class=tip><input type=button id=cbg value='{⮬}' onclick=GroupByClick() style='height:2em; padding:0; width:2em'><span class=tiptext># 22 #</span></div></th>
          <th><div class=tip><input type=button id=cbs1 value='⮬' onclick=SortBy1Click() style='height:2em; padding:0; width:1.6em'><span class=tiptext># 14 #</span></div></th>
          <th><div class=tip><input type=button id=cbs2 value='⮬' onclick=SortBy2Click() style='height:2em; padding:0; width:1.6em'><span class=tiptext># 15 #</span></div></th>
          <th><div class=tip><input type=button id=cbs3 value='⮬' onclick=SortBy3Click() style='height:2em; padding:0; width:1.6em'><span class=tiptext># 16 #</span></div></th>
          <th><div class=tip><input type=button id=cbs4 value='⮬' onclick=SortBy4Click() style='height:2em; padding:0; width:1.6em'></div></th>
          <th><div class=tip><input type=button id=cbw value='⟷' onclick=WidthClick() style='height:2em; padding:0; width:2em'><span class=tiptext># 18 #</span></div></th>
          <th><div class=tip><input type=button id=cbo value='⋮⋮⋮' onclick=View1Click() style='height:2em; padding:0; width:2em'><span class=tiptext># 19 #</span></div></th>
          <th><div class=tip><input type=button id=cbc value='⋮' onclick=View2Click() style='height:2em; padding:0; width:2em'><span class=tiptext># 20 #</span></div></th>
          </tr>
        </tbody>
      </table>
    </div>
    </div>
    <div id=tc>
    <div id=tcin>
      <table id=tab2>
        <colgroup>
          <col style='width:3.2em; min-width:3.2em; max-width:3.2em'>
          <col style='width:1.9em; min-width:1.9em; max-width:1.9em'>
          <col style='width:1.9em; min-width:1.9em; max-width:1.9em'>
          <col style='width:1.9em; min-width:1.9em; max-width:1.9em'>
          <col style='width:1.9em; min-width:1.9em; max-width:1.9em'>
          <col style='width:4.6em; min-width:4.6em; max-width:4.6em'>
          <col style='width:3.0em; min-width:3.0em; max-width:3.0em'>
          <col style='width:3.0em; min-width:3.0em; max-width:3.0em'>
        </colgroup>
        <tbody>
          ~~~
        </tbody>
      </table>
    </div>
    </div>
  </div>

  <div id=Pg3>
    <div id=P3hd>
      <input type=button value='&#223;' ID=BkP3 OnClick=Back2Pg1()>
      <select id=Font2 onchange=UpdateFont2()></select>
      <select id=Size2 onchange=UpdateSize2()></select>
    </div>
    <textarea id=Txt1 wrap=off onscroll=Txt1Scroll()></textarea>
    <textarea id=Txt2 wrap=off onscroll=Txt2Scroll()></textarea>
  </div>

  <div id=Pg4>
    <div id=fix4>
    <div id=f4in>
      <input type=button value='&#223;' ID=BkP4 OnClick=Back2Pg1()>
      <div class='tip fl2'><input type=button value='# 31 #' onclick=Help("https://lesferch.github.io/WinSetView/Manual.html#folder-view-options-1")>
      <span id=Vp3 class=tiptext></span></div>
      <div class='tip fl3'><input id=bc3 type=button value='⛶' onclick=RecenterButton()>
      <span class=tiptext># 42 #</span></div>
      <h2># 69 #</h2>
    </div>
    </div>
    <div class=opt id=Sec4>
      <input type=checkbox id=so Checked onclick=OptionSearchOnly()># 9 #<br>
      <div id=LSDiv>
        <input type=checkbox id=ls onclick=OptionLS()># 60 #<br>
        <div id=lss style='display:none'>
          <input type=checkbox id=fr># 61 #<br>
        </div>
      </div>
      <input type=checkbox id=vf Checked># 29 #<br>
      <input type=checkbox id=gn Checked># 10 #<br>
      <input type=checkbox id=hg># 52 #<br>
      <input type=checkbox id=lg># 66 #<br>
      <input type=checkbox id=tp onclick=OptionThisPC()># 13 #<br>
      <div id=otp><select id=tpv></select> <input type=checkbox id=tpg checked># 25 #</div>
    </div>
  </div>

  <div id=Pg5>
    <div id=fix5>
    <div id=f5in>
      <input type=button value='&#223;' ID=BkP5 OnClick=Back2Pg1()>
      <div class='tip fl2'><input type=button value='# 31 #' onclick=Help("https://lesferch.github.io/WinSetView/Manual.html#explorer-options-1")>
      <span id=Vp4 class=tiptext></span></div>
      <div class='tip fl3'><input id=bc4 type=button value='⛶' onclick=RecenterButton()>
      <span class=tiptext># 42 #</span></div>
       <div class='tip fl3'><input type=button class=icon value='🔍' onclick=DetectExpOptions()>
      <span class=tiptext># 71 #</span></div>
      <h2># 70 #</h2>
    </div>
    </div>
    <div class=opt id=Sec5>
      <input type=checkbox id=se Checked># 8 #<br>
      <input type=checkbox id=cv Checked># 27 #<br>
      <input type=checkbox id=hf># 67 #<br>
      <input type=checkbox id=cm># 47 #<br>
      <input type=checkbox id=mc># 68 #<br>
      <input type=checkbox id=si># 48 #<br>
      <input type=checkbox id=sh># 49 #<br>
      <input type=checkbox id=nf># 35 #<br>
      <input type=checkbox id=ua># 50 #<br>
      <input type=checkbox id=ns># 11 #<br>
      <input type=checkbox id=ex># 57 #<br>
      <input type=checkbox id=nn># 53 # <img class=shield src='uac.png'><br>
      <input type=checkbox id=ts onclick=OptionTS()># 54 # <img class=shield src='uac.png'><br>
      <div id=tss style='display:none'>
        <input type=checkbox id=sc># 51 #<br>
      </div>
      <div id=ees style='display:none'>
        <input type=checkbox id=ee># 55 # <img class=shield src='uac.png'><br>
      </div>
      <input type=checkbox id=ld># 56 # <img class=shield src='uac.png'><br>
      <input type=checkbox id=pd># 76 # <img class=shield src='uac.png'><br>
      <input type=checkbox id=es onclick=OptionES()># 58 #<br>
      <div id=esd>
        <input type=radio name=eso id=rbes1 value=1 onclick=OptionES()># 62 # &nbsp
        <input type=radio name=eso id=rbes2 value=2 onclick=OptionES()># 63 # &nbsp
        <input type=radio name=eso id=rbes3 value=3 onclick=OptionES()># 64 # &nbsp
        <input type=radio name=eso id=rbes4 value=4 onclick=OptionES()># 65 #
      </div>
      <div id=esd2>
        <input id=esi type="text" value="C:\" style=width:99% onclick=OptionESI()><br>
        <select id=ess  onchange=UpdateESI()>
          <option selected disabled># 59 #</option>
          <option>shell:Profile</option>
          <option>shell:Desktop</option>
          <option>shell:ThisPCDesktopFolder</option>
          <option>shell:Local Documents</option>
          <option>shell:Local Music</option>
          <option>shell:Local Pictures</option>
          <option>shell:Local Videos</option>
          <option>shell:Libraries</option>
          <option>shell:DocumentsLibrary</option>
          <option>shell:MusicLibrary</option>
          <option>shell:PicturesLibrary</option>
          <option>shell:VideosLibrary</option>
        </select>
        <input type=button id=edb class=icon value=📁 style='height:1.7em' onclick=OptionESB()><br>
      </div>
    </div>
  </div>

</body>
</html>